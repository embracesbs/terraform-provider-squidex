/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// TemplatesDto struct for TemplatesDto
type TemplatesDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The event consumers.
	Items []TemplateDto `json:"items,omitempty"`
}

// NewTemplatesDto instantiates a new TemplatesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesDto(links map[string]ResourceLink) *TemplatesDto {
	this := TemplatesDto{}
	this.Links = links
	return &this
}

// NewTemplatesDtoWithDefaults instantiates a new TemplatesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesDtoWithDefaults() *TemplatesDto {
	this := TemplatesDto{}
	return &this
}

// GetLinks returns the Links field value
func (o *TemplatesDto) GetLinks() map[string]ResourceLink {
	if o == nil {
		var ret map[string]ResourceLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *TemplatesDto) GetLinksOk() (*map[string]ResourceLink, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *TemplatesDto) SetLinks(v map[string]ResourceLink) {
	o.Links = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *TemplatesDto) GetItems() []TemplateDto {
	if o == nil || isNil(o.Items) {
		var ret []TemplateDto
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplatesDto) GetItemsOk() ([]TemplateDto, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *TemplatesDto) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []TemplateDto and assigns it to the Items field.
func (o *TemplatesDto) SetItems(v []TemplateDto) {
	o.Items = v
}

func (o TemplatesDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_links"] = o.Links
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableTemplatesDto struct {
	value *TemplatesDto
	isSet bool
}

func (v NullableTemplatesDto) Get() *TemplatesDto {
	return v.value
}

func (v *NullableTemplatesDto) Set(val *TemplatesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesDto(val *TemplatesDto) *NullableTemplatesDto {
	return &NullableTemplatesDto{value: val, isSet: true}
}

func (v NullableTemplatesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


