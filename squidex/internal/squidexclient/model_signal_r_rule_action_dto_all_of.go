/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SignalRRuleActionDtoAllOf struct for SignalRRuleActionDtoAllOf
type SignalRRuleActionDtoAllOf struct {
	// The connection string to the Azure SignalR.
	ConnectionString string `json:"connectionString"`
	// The name of the hub.
	HubName string `json:"hubName"`
	Action ActionTypeEnum `json:"action"`
	// Set the Name of the hub method received by the customer.
	MethodName NullableString `json:"methodName,omitempty"`
	// Define target users or groups by id or name. One item per line. Not needed for Broadcast action.
	Target NullableString `json:"target,omitempty"`
	// Leave it empty to use the full event as body.
	Payload NullableString `json:"payload,omitempty"`
}

// NewSignalRRuleActionDtoAllOf instantiates a new SignalRRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignalRRuleActionDtoAllOf(connectionString string, hubName string, action ActionTypeEnum) *SignalRRuleActionDtoAllOf {
	this := SignalRRuleActionDtoAllOf{}
	this.ConnectionString = connectionString
	this.HubName = hubName
	this.Action = action
	return &this
}

// NewSignalRRuleActionDtoAllOfWithDefaults instantiates a new SignalRRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignalRRuleActionDtoAllOfWithDefaults() *SignalRRuleActionDtoAllOf {
	this := SignalRRuleActionDtoAllOf{}
	return &this
}

// GetConnectionString returns the ConnectionString field value
func (o *SignalRRuleActionDtoAllOf) GetConnectionString() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionString
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value
// and a boolean to check if the value has been set.
func (o *SignalRRuleActionDtoAllOf) GetConnectionStringOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionString, true
}

// SetConnectionString sets field value
func (o *SignalRRuleActionDtoAllOf) SetConnectionString(v string) {
	o.ConnectionString = v
}

// GetHubName returns the HubName field value
func (o *SignalRRuleActionDtoAllOf) GetHubName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HubName
}

// GetHubNameOk returns a tuple with the HubName field value
// and a boolean to check if the value has been set.
func (o *SignalRRuleActionDtoAllOf) GetHubNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HubName, true
}

// SetHubName sets field value
func (o *SignalRRuleActionDtoAllOf) SetHubName(v string) {
	o.HubName = v
}

// GetAction returns the Action field value
func (o *SignalRRuleActionDtoAllOf) GetAction() ActionTypeEnum {
	if o == nil {
		var ret ActionTypeEnum
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *SignalRRuleActionDtoAllOf) GetActionOk() (*ActionTypeEnum, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *SignalRRuleActionDtoAllOf) SetAction(v ActionTypeEnum) {
	o.Action = v
}

// GetMethodName returns the MethodName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignalRRuleActionDtoAllOf) GetMethodName() string {
	if o == nil || isNil(o.MethodName.Get()) {
		var ret string
		return ret
	}
	return *o.MethodName.Get()
}

// GetMethodNameOk returns a tuple with the MethodName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignalRRuleActionDtoAllOf) GetMethodNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.MethodName.Get(), o.MethodName.IsSet()
}

// HasMethodName returns a boolean if a field has been set.
func (o *SignalRRuleActionDtoAllOf) HasMethodName() bool {
	if o != nil && o.MethodName.IsSet() {
		return true
	}

	return false
}

// SetMethodName gets a reference to the given NullableString and assigns it to the MethodName field.
func (o *SignalRRuleActionDtoAllOf) SetMethodName(v string) {
	o.MethodName.Set(&v)
}
// SetMethodNameNil sets the value for MethodName to be an explicit nil
func (o *SignalRRuleActionDtoAllOf) SetMethodNameNil() {
	o.MethodName.Set(nil)
}

// UnsetMethodName ensures that no value is present for MethodName, not even an explicit nil
func (o *SignalRRuleActionDtoAllOf) UnsetMethodName() {
	o.MethodName.Unset()
}

// GetTarget returns the Target field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignalRRuleActionDtoAllOf) GetTarget() string {
	if o == nil || isNil(o.Target.Get()) {
		var ret string
		return ret
	}
	return *o.Target.Get()
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignalRRuleActionDtoAllOf) GetTargetOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Target.Get(), o.Target.IsSet()
}

// HasTarget returns a boolean if a field has been set.
func (o *SignalRRuleActionDtoAllOf) HasTarget() bool {
	if o != nil && o.Target.IsSet() {
		return true
	}

	return false
}

// SetTarget gets a reference to the given NullableString and assigns it to the Target field.
func (o *SignalRRuleActionDtoAllOf) SetTarget(v string) {
	o.Target.Set(&v)
}
// SetTargetNil sets the value for Target to be an explicit nil
func (o *SignalRRuleActionDtoAllOf) SetTargetNil() {
	o.Target.Set(nil)
}

// UnsetTarget ensures that no value is present for Target, not even an explicit nil
func (o *SignalRRuleActionDtoAllOf) UnsetTarget() {
	o.Target.Unset()
}

// GetPayload returns the Payload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SignalRRuleActionDtoAllOf) GetPayload() string {
	if o == nil || isNil(o.Payload.Get()) {
		var ret string
		return ret
	}
	return *o.Payload.Get()
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SignalRRuleActionDtoAllOf) GetPayloadOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Payload.Get(), o.Payload.IsSet()
}

// HasPayload returns a boolean if a field has been set.
func (o *SignalRRuleActionDtoAllOf) HasPayload() bool {
	if o != nil && o.Payload.IsSet() {
		return true
	}

	return false
}

// SetPayload gets a reference to the given NullableString and assigns it to the Payload field.
func (o *SignalRRuleActionDtoAllOf) SetPayload(v string) {
	o.Payload.Set(&v)
}
// SetPayloadNil sets the value for Payload to be an explicit nil
func (o *SignalRRuleActionDtoAllOf) SetPayloadNil() {
	o.Payload.Set(nil)
}

// UnsetPayload ensures that no value is present for Payload, not even an explicit nil
func (o *SignalRRuleActionDtoAllOf) UnsetPayload() {
	o.Payload.Unset()
}

func (o SignalRRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectionString"] = o.ConnectionString
	}
	if true {
		toSerialize["hubName"] = o.HubName
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if o.MethodName.IsSet() {
		toSerialize["methodName"] = o.MethodName.Get()
	}
	if o.Target.IsSet() {
		toSerialize["target"] = o.Target.Get()
	}
	if o.Payload.IsSet() {
		toSerialize["payload"] = o.Payload.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSignalRRuleActionDtoAllOf struct {
	value *SignalRRuleActionDtoAllOf
	isSet bool
}

func (v NullableSignalRRuleActionDtoAllOf) Get() *SignalRRuleActionDtoAllOf {
	return v.value
}

func (v *NullableSignalRRuleActionDtoAllOf) Set(val *SignalRRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSignalRRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSignalRRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignalRRuleActionDtoAllOf(val *SignalRRuleActionDtoAllOf) *NullableSignalRRuleActionDtoAllOf {
	return &NullableSignalRRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableSignalRRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignalRRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


