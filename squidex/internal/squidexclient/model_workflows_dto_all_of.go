/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WorkflowsDtoAllOf struct for WorkflowsDtoAllOf
type WorkflowsDtoAllOf struct {
	// The workflow.
	Items []WorkflowDto `json:"items"`
	// The errros that should be fixed.
	Errors []string `json:"errors"`
}

// NewWorkflowsDtoAllOf instantiates a new WorkflowsDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowsDtoAllOf(items []WorkflowDto, errors []string) *WorkflowsDtoAllOf {
	this := WorkflowsDtoAllOf{}
	this.Items = items
	this.Errors = errors
	return &this
}

// NewWorkflowsDtoAllOfWithDefaults instantiates a new WorkflowsDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowsDtoAllOfWithDefaults() *WorkflowsDtoAllOf {
	this := WorkflowsDtoAllOf{}
	return &this
}

// GetItems returns the Items field value
func (o *WorkflowsDtoAllOf) GetItems() []WorkflowDto {
	if o == nil {
		var ret []WorkflowDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *WorkflowsDtoAllOf) GetItemsOk() ([]WorkflowDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *WorkflowsDtoAllOf) SetItems(v []WorkflowDto) {
	o.Items = v
}

// GetErrors returns the Errors field value
func (o *WorkflowsDtoAllOf) GetErrors() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *WorkflowsDtoAllOf) GetErrorsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *WorkflowsDtoAllOf) SetErrors(v []string) {
	o.Errors = v
}

func (o WorkflowsDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowsDtoAllOf struct {
	value *WorkflowsDtoAllOf
	isSet bool
}

func (v NullableWorkflowsDtoAllOf) Get() *WorkflowsDtoAllOf {
	return v.value
}

func (v *NullableWorkflowsDtoAllOf) Set(val *WorkflowsDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowsDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowsDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowsDtoAllOf(val *WorkflowsDtoAllOf) *NullableWorkflowsDtoAllOf {
	return &NullableWorkflowsDtoAllOf{value: val, isSet: true}
}

func (v NullableWorkflowsDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowsDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


