/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RuleAction struct for RuleAction
type RuleAction struct {
	ActionType NullableString `json:"actionType"`
}

// NewRuleAction instantiates a new RuleAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleAction(actionType NullableString) *RuleAction {
	this := RuleAction{}
	this.ActionType = actionType
	return &this
}

// NewRuleActionWithDefaults instantiates a new RuleAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleActionWithDefaults() *RuleAction {
	this := RuleAction{}
	return &this
}

// GetActionType returns the ActionType field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RuleAction) GetActionType() string {
	if o == nil || o.ActionType.Get() == nil {
		var ret string
		return ret
	}

	return *o.ActionType.Get()
}

// GetActionTypeOk returns a tuple with the ActionType field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RuleAction) GetActionTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ActionType.Get(), o.ActionType.IsSet()
}

// SetActionType sets field value
func (o *RuleAction) SetActionType(v string) {
	o.ActionType.Set(&v)
}

func (o RuleAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actionType"] = o.ActionType.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRuleAction struct {
	value *RuleAction
	isSet bool
}

func (v NullableRuleAction) Get() *RuleAction {
	return v.value
}

func (v *NullableRuleAction) Set(val *RuleAction) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleAction) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleAction(val *RuleAction) *NullableRuleAction {
	return &NullableRuleAction{value: val, isSet: true}
}

func (v NullableRuleAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


