/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateFieldDto struct for UpdateFieldDto
type UpdateFieldDto struct {
	Properties FieldPropertiesDto `json:"properties"`
}

// NewUpdateFieldDto instantiates a new UpdateFieldDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFieldDto(properties FieldPropertiesDto) *UpdateFieldDto {
	this := UpdateFieldDto{}
	this.Properties = properties
	return &this
}

// NewUpdateFieldDtoWithDefaults instantiates a new UpdateFieldDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFieldDtoWithDefaults() *UpdateFieldDto {
	this := UpdateFieldDto{}
	return &this
}

// GetProperties returns the Properties field value
func (o *UpdateFieldDto) GetProperties() FieldPropertiesDto {
	if o == nil {
		var ret FieldPropertiesDto
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *UpdateFieldDto) GetPropertiesOk() (*FieldPropertiesDto, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *UpdateFieldDto) SetProperties(v FieldPropertiesDto) {
	o.Properties = v
}

func (o UpdateFieldDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateFieldDto struct {
	value *UpdateFieldDto
	isSet bool
}

func (v NullableUpdateFieldDto) Get() *UpdateFieldDto {
	return v.value
}

func (v *NullableUpdateFieldDto) Set(val *UpdateFieldDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFieldDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFieldDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFieldDto(val *UpdateFieldDto) *NullableUpdateFieldDto {
	return &NullableUpdateFieldDto{value: val, isSet: true}
}

func (v NullableUpdateFieldDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFieldDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


