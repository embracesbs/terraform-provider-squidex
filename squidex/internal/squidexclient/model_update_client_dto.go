/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UpdateClientDto struct for UpdateClientDto
type UpdateClientDto struct {
	// The new display name of the client.
	Name NullableString `json:"name,omitempty"`
	// The role of the client.
	Role NullableString `json:"role,omitempty"`
	// True to allow anonymous access without an access token for this client.
	AllowAnonymous NullableBool `json:"allowAnonymous,omitempty"`
	// The number of allowed api calls per month for this client.
	ApiCallsLimit NullableInt64 `json:"apiCallsLimit,omitempty"`
	// The number of allowed api traffic bytes per month for this client.
	ApiTrafficLimit NullableInt64 `json:"apiTrafficLimit,omitempty"`
}

// NewUpdateClientDto instantiates a new UpdateClientDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClientDto() *UpdateClientDto {
	this := UpdateClientDto{}
	return &this
}

// NewUpdateClientDtoWithDefaults instantiates a new UpdateClientDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClientDtoWithDefaults() *UpdateClientDto {
	this := UpdateClientDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateClientDto) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateClientDto) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UpdateClientDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UpdateClientDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UpdateClientDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UpdateClientDto) UnsetName() {
	o.Name.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateClientDto) GetRole() string {
	if o == nil || isNil(o.Role.Get()) {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateClientDto) GetRoleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *UpdateClientDto) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *UpdateClientDto) SetRole(v string) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *UpdateClientDto) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *UpdateClientDto) UnsetRole() {
	o.Role.Unset()
}

// GetAllowAnonymous returns the AllowAnonymous field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateClientDto) GetAllowAnonymous() bool {
	if o == nil || isNil(o.AllowAnonymous.Get()) {
		var ret bool
		return ret
	}
	return *o.AllowAnonymous.Get()
}

// GetAllowAnonymousOk returns a tuple with the AllowAnonymous field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateClientDto) GetAllowAnonymousOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.AllowAnonymous.Get(), o.AllowAnonymous.IsSet()
}

// HasAllowAnonymous returns a boolean if a field has been set.
func (o *UpdateClientDto) HasAllowAnonymous() bool {
	if o != nil && o.AllowAnonymous.IsSet() {
		return true
	}

	return false
}

// SetAllowAnonymous gets a reference to the given NullableBool and assigns it to the AllowAnonymous field.
func (o *UpdateClientDto) SetAllowAnonymous(v bool) {
	o.AllowAnonymous.Set(&v)
}
// SetAllowAnonymousNil sets the value for AllowAnonymous to be an explicit nil
func (o *UpdateClientDto) SetAllowAnonymousNil() {
	o.AllowAnonymous.Set(nil)
}

// UnsetAllowAnonymous ensures that no value is present for AllowAnonymous, not even an explicit nil
func (o *UpdateClientDto) UnsetAllowAnonymous() {
	o.AllowAnonymous.Unset()
}

// GetApiCallsLimit returns the ApiCallsLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateClientDto) GetApiCallsLimit() int64 {
	if o == nil || isNil(o.ApiCallsLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.ApiCallsLimit.Get()
}

// GetApiCallsLimitOk returns a tuple with the ApiCallsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateClientDto) GetApiCallsLimitOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return o.ApiCallsLimit.Get(), o.ApiCallsLimit.IsSet()
}

// HasApiCallsLimit returns a boolean if a field has been set.
func (o *UpdateClientDto) HasApiCallsLimit() bool {
	if o != nil && o.ApiCallsLimit.IsSet() {
		return true
	}

	return false
}

// SetApiCallsLimit gets a reference to the given NullableInt64 and assigns it to the ApiCallsLimit field.
func (o *UpdateClientDto) SetApiCallsLimit(v int64) {
	o.ApiCallsLimit.Set(&v)
}
// SetApiCallsLimitNil sets the value for ApiCallsLimit to be an explicit nil
func (o *UpdateClientDto) SetApiCallsLimitNil() {
	o.ApiCallsLimit.Set(nil)
}

// UnsetApiCallsLimit ensures that no value is present for ApiCallsLimit, not even an explicit nil
func (o *UpdateClientDto) UnsetApiCallsLimit() {
	o.ApiCallsLimit.Unset()
}

// GetApiTrafficLimit returns the ApiTrafficLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateClientDto) GetApiTrafficLimit() int64 {
	if o == nil || isNil(o.ApiTrafficLimit.Get()) {
		var ret int64
		return ret
	}
	return *o.ApiTrafficLimit.Get()
}

// GetApiTrafficLimitOk returns a tuple with the ApiTrafficLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateClientDto) GetApiTrafficLimitOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return o.ApiTrafficLimit.Get(), o.ApiTrafficLimit.IsSet()
}

// HasApiTrafficLimit returns a boolean if a field has been set.
func (o *UpdateClientDto) HasApiTrafficLimit() bool {
	if o != nil && o.ApiTrafficLimit.IsSet() {
		return true
	}

	return false
}

// SetApiTrafficLimit gets a reference to the given NullableInt64 and assigns it to the ApiTrafficLimit field.
func (o *UpdateClientDto) SetApiTrafficLimit(v int64) {
	o.ApiTrafficLimit.Set(&v)
}
// SetApiTrafficLimitNil sets the value for ApiTrafficLimit to be an explicit nil
func (o *UpdateClientDto) SetApiTrafficLimitNil() {
	o.ApiTrafficLimit.Set(nil)
}

// UnsetApiTrafficLimit ensures that no value is present for ApiTrafficLimit, not even an explicit nil
func (o *UpdateClientDto) UnsetApiTrafficLimit() {
	o.ApiTrafficLimit.Unset()
}

func (o UpdateClientDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.AllowAnonymous.IsSet() {
		toSerialize["allowAnonymous"] = o.AllowAnonymous.Get()
	}
	if o.ApiCallsLimit.IsSet() {
		toSerialize["apiCallsLimit"] = o.ApiCallsLimit.Get()
	}
	if o.ApiTrafficLimit.IsSet() {
		toSerialize["apiTrafficLimit"] = o.ApiTrafficLimit.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateClientDto struct {
	value *UpdateClientDto
	isSet bool
}

func (v NullableUpdateClientDto) Get() *UpdateClientDto {
	return v.value
}

func (v *NullableUpdateClientDto) Set(val *UpdateClientDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClientDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClientDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClientDto(val *UpdateClientDto) *NullableUpdateClientDto {
	return &NullableUpdateClientDto{value: val, isSet: true}
}

func (v NullableUpdateClientDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClientDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


