/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RestoreRequestDto struct for RestoreRequestDto
type RestoreRequestDto struct {
	// The name of the app.
	Name NullableString `json:"name,omitempty"`
	// The url to the restore file.
	Url string `json:"url"`
}

// NewRestoreRequestDto instantiates a new RestoreRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreRequestDto(url string) *RestoreRequestDto {
	this := RestoreRequestDto{}
	this.Url = url
	return &this
}

// NewRestoreRequestDtoWithDefaults instantiates a new RestoreRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreRequestDtoWithDefaults() *RestoreRequestDto {
	this := RestoreRequestDto{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreRequestDto) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreRequestDto) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *RestoreRequestDto) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *RestoreRequestDto) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *RestoreRequestDto) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *RestoreRequestDto) UnsetName() {
	o.Name.Unset()
}

// GetUrl returns the Url field value
func (o *RestoreRequestDto) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *RestoreRequestDto) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *RestoreRequestDto) SetUrl(v string) {
	o.Url = v
}

func (o RestoreRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreRequestDto struct {
	value *RestoreRequestDto
	isSet bool
}

func (v NullableRestoreRequestDto) Get() *RestoreRequestDto {
	return v.value
}

func (v *NullableRestoreRequestDto) Set(val *RestoreRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRequestDto(val *RestoreRequestDto) *NullableRestoreRequestDto {
	return &NullableRestoreRequestDto{value: val, isSet: true}
}

func (v NullableRestoreRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


