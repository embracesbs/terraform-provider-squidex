/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UIFieldPropertiesDtoAllOf struct for UIFieldPropertiesDtoAllOf
type UIFieldPropertiesDtoAllOf struct {
	Editor *UIFieldEditor `json:"editor,omitempty"`
}

// NewUIFieldPropertiesDtoAllOf instantiates a new UIFieldPropertiesDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUIFieldPropertiesDtoAllOf() *UIFieldPropertiesDtoAllOf {
	this := UIFieldPropertiesDtoAllOf{}
	return &this
}

// NewUIFieldPropertiesDtoAllOfWithDefaults instantiates a new UIFieldPropertiesDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUIFieldPropertiesDtoAllOfWithDefaults() *UIFieldPropertiesDtoAllOf {
	this := UIFieldPropertiesDtoAllOf{}
	return &this
}

// GetEditor returns the Editor field value if set, zero value otherwise.
func (o *UIFieldPropertiesDtoAllOf) GetEditor() UIFieldEditor {
	if o == nil || isNil(o.Editor) {
		var ret UIFieldEditor
		return ret
	}
	return *o.Editor
}

// GetEditorOk returns a tuple with the Editor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UIFieldPropertiesDtoAllOf) GetEditorOk() (*UIFieldEditor, bool) {
	if o == nil || isNil(o.Editor) {
    return nil, false
	}
	return o.Editor, true
}

// HasEditor returns a boolean if a field has been set.
func (o *UIFieldPropertiesDtoAllOf) HasEditor() bool {
	if o != nil && !isNil(o.Editor) {
		return true
	}

	return false
}

// SetEditor gets a reference to the given UIFieldEditor and assigns it to the Editor field.
func (o *UIFieldPropertiesDtoAllOf) SetEditor(v UIFieldEditor) {
	o.Editor = &v
}

func (o UIFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Editor) {
		toSerialize["editor"] = o.Editor
	}
	return json.Marshal(toSerialize)
}

type NullableUIFieldPropertiesDtoAllOf struct {
	value *UIFieldPropertiesDtoAllOf
	isSet bool
}

func (v NullableUIFieldPropertiesDtoAllOf) Get() *UIFieldPropertiesDtoAllOf {
	return v.value
}

func (v *NullableUIFieldPropertiesDtoAllOf) Set(val *UIFieldPropertiesDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUIFieldPropertiesDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUIFieldPropertiesDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUIFieldPropertiesDtoAllOf(val *UIFieldPropertiesDtoAllOf) *NullableUIFieldPropertiesDtoAllOf {
	return &NullableUIFieldPropertiesDtoAllOf{value: val, isSet: true}
}

func (v NullableUIFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUIFieldPropertiesDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


