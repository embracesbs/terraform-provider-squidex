/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// RolesDto struct for RolesDto
type RolesDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The roles.
	Items []RoleDto `json:"items"`
}

// NewRolesDto instantiates a new RolesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesDto(links map[string]ResourceLink, items []RoleDto) *RolesDto {
	this := RolesDto{}
	this.Links = links
	this.Items = items
	return &this
}

// NewRolesDtoWithDefaults instantiates a new RolesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesDtoWithDefaults() *RolesDto {
	this := RolesDto{}
	return &this
}

// GetLinks returns the Links field value
func (o *RolesDto) GetLinks() map[string]ResourceLink {
	if o == nil {
		var ret map[string]ResourceLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *RolesDto) GetLinksOk() (*map[string]ResourceLink, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *RolesDto) SetLinks(v map[string]ResourceLink) {
	o.Links = v
}

// GetItems returns the Items field value
func (o *RolesDto) GetItems() []RoleDto {
	if o == nil {
		var ret []RoleDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *RolesDto) GetItemsOk() ([]RoleDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *RolesDto) SetItems(v []RoleDto) {
	o.Items = v
}

func (o RolesDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_links"] = o.Links
	}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableRolesDto struct {
	value *RolesDto
	isSet bool
}

func (v NullableRolesDto) Get() *RolesDto {
	return v.value
}

func (v *NullableRolesDto) Set(val *RolesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesDto(val *RolesDto) *NullableRolesDto {
	return &NullableRolesDto{value: val, isSet: true}
}

func (v NullableRolesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


