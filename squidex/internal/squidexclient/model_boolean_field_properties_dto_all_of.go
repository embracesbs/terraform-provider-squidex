/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BooleanFieldPropertiesDtoAllOf struct for BooleanFieldPropertiesDtoAllOf
type BooleanFieldPropertiesDtoAllOf struct {
	DefaultValues *map[string]bool `json:"defaultValues,omitempty"`
	// The default value for the field value.
	DefaultValue NullableBool `json:"defaultValue,omitempty"`
	// Indicates that the inline editor is enabled for this field.
	InlineEditable *bool `json:"inlineEditable,omitempty"`
	Editor *BooleanFieldEditor `json:"editor,omitempty"`
}

// NewBooleanFieldPropertiesDtoAllOf instantiates a new BooleanFieldPropertiesDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooleanFieldPropertiesDtoAllOf() *BooleanFieldPropertiesDtoAllOf {
	this := BooleanFieldPropertiesDtoAllOf{}
	return &this
}

// NewBooleanFieldPropertiesDtoAllOfWithDefaults instantiates a new BooleanFieldPropertiesDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooleanFieldPropertiesDtoAllOfWithDefaults() *BooleanFieldPropertiesDtoAllOf {
	this := BooleanFieldPropertiesDtoAllOf{}
	return &this
}

// GetDefaultValues returns the DefaultValues field value if set, zero value otherwise.
func (o *BooleanFieldPropertiesDtoAllOf) GetDefaultValues() map[string]bool {
	if o == nil || isNil(o.DefaultValues) {
		var ret map[string]bool
		return ret
	}
	return *o.DefaultValues
}

// GetDefaultValuesOk returns a tuple with the DefaultValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanFieldPropertiesDtoAllOf) GetDefaultValuesOk() (*map[string]bool, bool) {
	if o == nil || isNil(o.DefaultValues) {
    return nil, false
	}
	return o.DefaultValues, true
}

// HasDefaultValues returns a boolean if a field has been set.
func (o *BooleanFieldPropertiesDtoAllOf) HasDefaultValues() bool {
	if o != nil && !isNil(o.DefaultValues) {
		return true
	}

	return false
}

// SetDefaultValues gets a reference to the given map[string]bool and assigns it to the DefaultValues field.
func (o *BooleanFieldPropertiesDtoAllOf) SetDefaultValues(v map[string]bool) {
	o.DefaultValues = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BooleanFieldPropertiesDtoAllOf) GetDefaultValue() bool {
	if o == nil || isNil(o.DefaultValue.Get()) {
		var ret bool
		return ret
	}
	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BooleanFieldPropertiesDtoAllOf) GetDefaultValueOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *BooleanFieldPropertiesDtoAllOf) HasDefaultValue() bool {
	if o != nil && o.DefaultValue.IsSet() {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given NullableBool and assigns it to the DefaultValue field.
func (o *BooleanFieldPropertiesDtoAllOf) SetDefaultValue(v bool) {
	o.DefaultValue.Set(&v)
}
// SetDefaultValueNil sets the value for DefaultValue to be an explicit nil
func (o *BooleanFieldPropertiesDtoAllOf) SetDefaultValueNil() {
	o.DefaultValue.Set(nil)
}

// UnsetDefaultValue ensures that no value is present for DefaultValue, not even an explicit nil
func (o *BooleanFieldPropertiesDtoAllOf) UnsetDefaultValue() {
	o.DefaultValue.Unset()
}

// GetInlineEditable returns the InlineEditable field value if set, zero value otherwise.
func (o *BooleanFieldPropertiesDtoAllOf) GetInlineEditable() bool {
	if o == nil || isNil(o.InlineEditable) {
		var ret bool
		return ret
	}
	return *o.InlineEditable
}

// GetInlineEditableOk returns a tuple with the InlineEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanFieldPropertiesDtoAllOf) GetInlineEditableOk() (*bool, bool) {
	if o == nil || isNil(o.InlineEditable) {
    return nil, false
	}
	return o.InlineEditable, true
}

// HasInlineEditable returns a boolean if a field has been set.
func (o *BooleanFieldPropertiesDtoAllOf) HasInlineEditable() bool {
	if o != nil && !isNil(o.InlineEditable) {
		return true
	}

	return false
}

// SetInlineEditable gets a reference to the given bool and assigns it to the InlineEditable field.
func (o *BooleanFieldPropertiesDtoAllOf) SetInlineEditable(v bool) {
	o.InlineEditable = &v
}

// GetEditor returns the Editor field value if set, zero value otherwise.
func (o *BooleanFieldPropertiesDtoAllOf) GetEditor() BooleanFieldEditor {
	if o == nil || isNil(o.Editor) {
		var ret BooleanFieldEditor
		return ret
	}
	return *o.Editor
}

// GetEditorOk returns a tuple with the Editor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanFieldPropertiesDtoAllOf) GetEditorOk() (*BooleanFieldEditor, bool) {
	if o == nil || isNil(o.Editor) {
    return nil, false
	}
	return o.Editor, true
}

// HasEditor returns a boolean if a field has been set.
func (o *BooleanFieldPropertiesDtoAllOf) HasEditor() bool {
	if o != nil && !isNil(o.Editor) {
		return true
	}

	return false
}

// SetEditor gets a reference to the given BooleanFieldEditor and assigns it to the Editor field.
func (o *BooleanFieldPropertiesDtoAllOf) SetEditor(v BooleanFieldEditor) {
	o.Editor = &v
}

func (o BooleanFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DefaultValues) {
		toSerialize["defaultValues"] = o.DefaultValues
	}
	if o.DefaultValue.IsSet() {
		toSerialize["defaultValue"] = o.DefaultValue.Get()
	}
	if !isNil(o.InlineEditable) {
		toSerialize["inlineEditable"] = o.InlineEditable
	}
	if !isNil(o.Editor) {
		toSerialize["editor"] = o.Editor
	}
	return json.Marshal(toSerialize)
}

type NullableBooleanFieldPropertiesDtoAllOf struct {
	value *BooleanFieldPropertiesDtoAllOf
	isSet bool
}

func (v NullableBooleanFieldPropertiesDtoAllOf) Get() *BooleanFieldPropertiesDtoAllOf {
	return v.value
}

func (v *NullableBooleanFieldPropertiesDtoAllOf) Set(val *BooleanFieldPropertiesDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBooleanFieldPropertiesDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBooleanFieldPropertiesDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooleanFieldPropertiesDtoAllOf(val *BooleanFieldPropertiesDtoAllOf) *NullableBooleanFieldPropertiesDtoAllOf {
	return &NullableBooleanFieldPropertiesDtoAllOf{value: val, isSet: true}
}

func (v NullableBooleanFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooleanFieldPropertiesDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


