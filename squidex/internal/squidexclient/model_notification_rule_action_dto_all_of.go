/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NotificationRuleActionDtoAllOf struct for NotificationRuleActionDtoAllOf
type NotificationRuleActionDtoAllOf struct {
	// The user id or email.
	User string `json:"user"`
	// The text to send.
	Text string `json:"text"`
	// The optional url to attach to the notification.
	Url NullableString `json:"url,omitempty"`
	// An optional client name.
	Client NullableString `json:"client,omitempty"`
}

// NewNotificationRuleActionDtoAllOf instantiates a new NotificationRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationRuleActionDtoAllOf(user string, text string) *NotificationRuleActionDtoAllOf {
	this := NotificationRuleActionDtoAllOf{}
	this.User = user
	this.Text = text
	return &this
}

// NewNotificationRuleActionDtoAllOfWithDefaults instantiates a new NotificationRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationRuleActionDtoAllOfWithDefaults() *NotificationRuleActionDtoAllOf {
	this := NotificationRuleActionDtoAllOf{}
	return &this
}

// GetUser returns the User field value
func (o *NotificationRuleActionDtoAllOf) GetUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleActionDtoAllOf) GetUserOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *NotificationRuleActionDtoAllOf) SetUser(v string) {
	o.User = v
}

// GetText returns the Text field value
func (o *NotificationRuleActionDtoAllOf) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *NotificationRuleActionDtoAllOf) GetTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *NotificationRuleActionDtoAllOf) SetText(v string) {
	o.Text = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationRuleActionDtoAllOf) GetUrl() string {
	if o == nil || isNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationRuleActionDtoAllOf) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *NotificationRuleActionDtoAllOf) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *NotificationRuleActionDtoAllOf) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *NotificationRuleActionDtoAllOf) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *NotificationRuleActionDtoAllOf) UnsetUrl() {
	o.Url.Unset()
}

// GetClient returns the Client field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NotificationRuleActionDtoAllOf) GetClient() string {
	if o == nil || isNil(o.Client.Get()) {
		var ret string
		return ret
	}
	return *o.Client.Get()
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NotificationRuleActionDtoAllOf) GetClientOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Client.Get(), o.Client.IsSet()
}

// HasClient returns a boolean if a field has been set.
func (o *NotificationRuleActionDtoAllOf) HasClient() bool {
	if o != nil && o.Client.IsSet() {
		return true
	}

	return false
}

// SetClient gets a reference to the given NullableString and assigns it to the Client field.
func (o *NotificationRuleActionDtoAllOf) SetClient(v string) {
	o.Client.Set(&v)
}
// SetClientNil sets the value for Client to be an explicit nil
func (o *NotificationRuleActionDtoAllOf) SetClientNil() {
	o.Client.Set(nil)
}

// UnsetClient ensures that no value is present for Client, not even an explicit nil
func (o *NotificationRuleActionDtoAllOf) UnsetClient() {
	o.Client.Unset()
}

func (o NotificationRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["user"] = o.User
	}
	if true {
		toSerialize["text"] = o.Text
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Client.IsSet() {
		toSerialize["client"] = o.Client.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationRuleActionDtoAllOf struct {
	value *NotificationRuleActionDtoAllOf
	isSet bool
}

func (v NullableNotificationRuleActionDtoAllOf) Get() *NotificationRuleActionDtoAllOf {
	return v.value
}

func (v *NullableNotificationRuleActionDtoAllOf) Set(val *NotificationRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationRuleActionDtoAllOf(val *NotificationRuleActionDtoAllOf) *NullableNotificationRuleActionDtoAllOf {
	return &NullableNotificationRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableNotificationRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


