/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// AssetMeta struct for AssetMeta
type AssetMeta struct {
	// Indicates whether the asset is a duplicate.
	IsDuplicate *string `json:"isDuplicate,omitempty"`
}

// NewAssetMeta instantiates a new AssetMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetMeta() *AssetMeta {
	this := AssetMeta{}
	return &this
}

// NewAssetMetaWithDefaults instantiates a new AssetMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetMetaWithDefaults() *AssetMeta {
	this := AssetMeta{}
	return &this
}

// GetIsDuplicate returns the IsDuplicate field value if set, zero value otherwise.
func (o *AssetMeta) GetIsDuplicate() string {
	if o == nil || isNil(o.IsDuplicate) {
		var ret string
		return ret
	}
	return *o.IsDuplicate
}

// GetIsDuplicateOk returns a tuple with the IsDuplicate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetMeta) GetIsDuplicateOk() (*string, bool) {
	if o == nil || isNil(o.IsDuplicate) {
    return nil, false
	}
	return o.IsDuplicate, true
}

// HasIsDuplicate returns a boolean if a field has been set.
func (o *AssetMeta) HasIsDuplicate() bool {
	if o != nil && !isNil(o.IsDuplicate) {
		return true
	}

	return false
}

// SetIsDuplicate gets a reference to the given string and assigns it to the IsDuplicate field.
func (o *AssetMeta) SetIsDuplicate(v string) {
	o.IsDuplicate = &v
}

func (o AssetMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsDuplicate) {
		toSerialize["isDuplicate"] = o.IsDuplicate
	}
	return json.Marshal(toSerialize)
}

type NullableAssetMeta struct {
	value *AssetMeta
	isSet bool
}

func (v NullableAssetMeta) Get() *AssetMeta {
	return v.value
}

func (v *NullableAssetMeta) Set(val *AssetMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetMeta(val *AssetMeta) *NullableAssetMeta {
	return &NullableAssetMeta{value: val, isSet: true}
}

func (v NullableAssetMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


