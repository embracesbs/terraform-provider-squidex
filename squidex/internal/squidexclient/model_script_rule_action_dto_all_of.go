/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// ScriptRuleActionDtoAllOf struct for ScriptRuleActionDtoAllOf
type ScriptRuleActionDtoAllOf struct {
	// The script to render.
	Script string `json:"script"`
}

// NewScriptRuleActionDtoAllOf instantiates a new ScriptRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScriptRuleActionDtoAllOf(script string) *ScriptRuleActionDtoAllOf {
	this := ScriptRuleActionDtoAllOf{}
	this.Script = script
	return &this
}

// NewScriptRuleActionDtoAllOfWithDefaults instantiates a new ScriptRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScriptRuleActionDtoAllOfWithDefaults() *ScriptRuleActionDtoAllOf {
	this := ScriptRuleActionDtoAllOf{}
	return &this
}

// GetScript returns the Script field value
func (o *ScriptRuleActionDtoAllOf) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *ScriptRuleActionDtoAllOf) GetScriptOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *ScriptRuleActionDtoAllOf) SetScript(v string) {
	o.Script = v
}

func (o ScriptRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["script"] = o.Script
	}
	return json.Marshal(toSerialize)
}

type NullableScriptRuleActionDtoAllOf struct {
	value *ScriptRuleActionDtoAllOf
	isSet bool
}

func (v NullableScriptRuleActionDtoAllOf) Get() *ScriptRuleActionDtoAllOf {
	return v.value
}

func (v *NullableScriptRuleActionDtoAllOf) Set(val *ScriptRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScriptRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScriptRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScriptRuleActionDtoAllOf(val *ScriptRuleActionDtoAllOf) *NullableScriptRuleActionDtoAllOf {
	return &NullableScriptRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableScriptRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScriptRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


