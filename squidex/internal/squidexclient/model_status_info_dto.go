/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// StatusInfoDto struct for StatusInfoDto
type StatusInfoDto struct {
	// The name of the status.
	Status string `json:"status"`
	// The color of the status.
	Color string `json:"color"`
}

// NewStatusInfoDto instantiates a new StatusInfoDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusInfoDto(status string, color string) *StatusInfoDto {
	this := StatusInfoDto{}
	this.Status = status
	this.Color = color
	return &this
}

// NewStatusInfoDtoWithDefaults instantiates a new StatusInfoDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusInfoDtoWithDefaults() *StatusInfoDto {
	this := StatusInfoDto{}
	return &this
}

// GetStatus returns the Status field value
func (o *StatusInfoDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *StatusInfoDto) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *StatusInfoDto) SetStatus(v string) {
	o.Status = v
}

// GetColor returns the Color field value
func (o *StatusInfoDto) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *StatusInfoDto) GetColorOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *StatusInfoDto) SetColor(v string) {
	o.Color = v
}

func (o StatusInfoDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["color"] = o.Color
	}
	return json.Marshal(toSerialize)
}

type NullableStatusInfoDto struct {
	value *StatusInfoDto
	isSet bool
}

func (v NullableStatusInfoDto) Get() *StatusInfoDto {
	return v.value
}

func (v *NullableStatusInfoDto) Set(val *StatusInfoDto) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusInfoDto) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusInfoDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusInfoDto(val *StatusInfoDto) *NullableStatusInfoDto {
	return &NullableStatusInfoDto{value: val, isSet: true}
}

func (v NullableStatusInfoDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusInfoDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


