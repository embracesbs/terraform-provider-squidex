/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContributorsDtoAllOf struct for ContributorsDtoAllOf
type ContributorsDtoAllOf struct {
	// The contributors.
	Items []ContributorDto `json:"items"`
	// The maximum number of allowed contributors.
	MaxContributors *int32 `json:"maxContributors,omitempty"`
	Meta *ContributorsMetadata `json:"_meta,omitempty"`
}

// NewContributorsDtoAllOf instantiates a new ContributorsDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorsDtoAllOf(items []ContributorDto) *ContributorsDtoAllOf {
	this := ContributorsDtoAllOf{}
	this.Items = items
	return &this
}

// NewContributorsDtoAllOfWithDefaults instantiates a new ContributorsDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorsDtoAllOfWithDefaults() *ContributorsDtoAllOf {
	this := ContributorsDtoAllOf{}
	return &this
}

// GetItems returns the Items field value
func (o *ContributorsDtoAllOf) GetItems() []ContributorDto {
	if o == nil {
		var ret []ContributorDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *ContributorsDtoAllOf) GetItemsOk() ([]ContributorDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *ContributorsDtoAllOf) SetItems(v []ContributorDto) {
	o.Items = v
}

// GetMaxContributors returns the MaxContributors field value if set, zero value otherwise.
func (o *ContributorsDtoAllOf) GetMaxContributors() int32 {
	if o == nil || isNil(o.MaxContributors) {
		var ret int32
		return ret
	}
	return *o.MaxContributors
}

// GetMaxContributorsOk returns a tuple with the MaxContributors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorsDtoAllOf) GetMaxContributorsOk() (*int32, bool) {
	if o == nil || isNil(o.MaxContributors) {
    return nil, false
	}
	return o.MaxContributors, true
}

// HasMaxContributors returns a boolean if a field has been set.
func (o *ContributorsDtoAllOf) HasMaxContributors() bool {
	if o != nil && !isNil(o.MaxContributors) {
		return true
	}

	return false
}

// SetMaxContributors gets a reference to the given int32 and assigns it to the MaxContributors field.
func (o *ContributorsDtoAllOf) SetMaxContributors(v int32) {
	o.MaxContributors = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ContributorsDtoAllOf) GetMeta() ContributorsMetadata {
	if o == nil || isNil(o.Meta) {
		var ret ContributorsMetadata
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorsDtoAllOf) GetMetaOk() (*ContributorsMetadata, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ContributorsDtoAllOf) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given ContributorsMetadata and assigns it to the Meta field.
func (o *ContributorsDtoAllOf) SetMeta(v ContributorsMetadata) {
	o.Meta = &v
}

func (o ContributorsDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.MaxContributors) {
		toSerialize["maxContributors"] = o.MaxContributors
	}
	if !isNil(o.Meta) {
		toSerialize["_meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableContributorsDtoAllOf struct {
	value *ContributorsDtoAllOf
	isSet bool
}

func (v NullableContributorsDtoAllOf) Get() *ContributorsDtoAllOf {
	return v.value
}

func (v *NullableContributorsDtoAllOf) Set(val *ContributorsDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorsDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorsDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorsDtoAllOf(val *ContributorsDtoAllOf) *NullableContributorsDtoAllOf {
	return &NullableContributorsDtoAllOf{value: val, isSet: true}
}

func (v NullableContributorsDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorsDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


