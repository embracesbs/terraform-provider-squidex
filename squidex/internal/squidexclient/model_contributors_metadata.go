/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContributorsMetadata struct for ContributorsMetadata
type ContributorsMetadata struct {
	// Indicates whether the user has been invited.
	IsInvited *string `json:"isInvited,omitempty"`
}

// NewContributorsMetadata instantiates a new ContributorsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorsMetadata() *ContributorsMetadata {
	this := ContributorsMetadata{}
	return &this
}

// NewContributorsMetadataWithDefaults instantiates a new ContributorsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorsMetadataWithDefaults() *ContributorsMetadata {
	this := ContributorsMetadata{}
	return &this
}

// GetIsInvited returns the IsInvited field value if set, zero value otherwise.
func (o *ContributorsMetadata) GetIsInvited() string {
	if o == nil || isNil(o.IsInvited) {
		var ret string
		return ret
	}
	return *o.IsInvited
}

// GetIsInvitedOk returns a tuple with the IsInvited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContributorsMetadata) GetIsInvitedOk() (*string, bool) {
	if o == nil || isNil(o.IsInvited) {
    return nil, false
	}
	return o.IsInvited, true
}

// HasIsInvited returns a boolean if a field has been set.
func (o *ContributorsMetadata) HasIsInvited() bool {
	if o != nil && !isNil(o.IsInvited) {
		return true
	}

	return false
}

// SetIsInvited gets a reference to the given string and assigns it to the IsInvited field.
func (o *ContributorsMetadata) SetIsInvited(v string) {
	o.IsInvited = &v
}

func (o ContributorsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsInvited) {
		toSerialize["isInvited"] = o.IsInvited
	}
	return json.Marshal(toSerialize)
}

type NullableContributorsMetadata struct {
	value *ContributorsMetadata
	isSet bool
}

func (v NullableContributorsMetadata) Get() *ContributorsMetadata {
	return v.value
}

func (v *NullableContributorsMetadata) Set(val *ContributorsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorsMetadata(val *ContributorsMetadata) *NullableContributorsMetadata {
	return &NullableContributorsMetadata{value: val, isSet: true}
}

func (v NullableContributorsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


