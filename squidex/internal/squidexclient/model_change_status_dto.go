/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
	"time"
)

// ChangeStatusDto struct for ChangeStatusDto
type ChangeStatusDto struct {
	// The new status.
	Status string `json:"status"`
	// The due time.
	DueTime NullableTime `json:"dueTime,omitempty"`
	// True to check referrers of this content.
	CheckReferrers *bool `json:"checkReferrers,omitempty"`
}

// NewChangeStatusDto instantiates a new ChangeStatusDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangeStatusDto(status string) *ChangeStatusDto {
	this := ChangeStatusDto{}
	this.Status = status
	return &this
}

// NewChangeStatusDtoWithDefaults instantiates a new ChangeStatusDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangeStatusDtoWithDefaults() *ChangeStatusDto {
	this := ChangeStatusDto{}
	return &this
}

// GetStatus returns the Status field value
func (o *ChangeStatusDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ChangeStatusDto) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ChangeStatusDto) SetStatus(v string) {
	o.Status = v
}

// GetDueTime returns the DueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChangeStatusDto) GetDueTime() time.Time {
	if o == nil || isNil(o.DueTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DueTime.Get()
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChangeStatusDto) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.DueTime.Get(), o.DueTime.IsSet()
}

// HasDueTime returns a boolean if a field has been set.
func (o *ChangeStatusDto) HasDueTime() bool {
	if o != nil && o.DueTime.IsSet() {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given NullableTime and assigns it to the DueTime field.
func (o *ChangeStatusDto) SetDueTime(v time.Time) {
	o.DueTime.Set(&v)
}
// SetDueTimeNil sets the value for DueTime to be an explicit nil
func (o *ChangeStatusDto) SetDueTimeNil() {
	o.DueTime.Set(nil)
}

// UnsetDueTime ensures that no value is present for DueTime, not even an explicit nil
func (o *ChangeStatusDto) UnsetDueTime() {
	o.DueTime.Unset()
}

// GetCheckReferrers returns the CheckReferrers field value if set, zero value otherwise.
func (o *ChangeStatusDto) GetCheckReferrers() bool {
	if o == nil || isNil(o.CheckReferrers) {
		var ret bool
		return ret
	}
	return *o.CheckReferrers
}

// GetCheckReferrersOk returns a tuple with the CheckReferrers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChangeStatusDto) GetCheckReferrersOk() (*bool, bool) {
	if o == nil || isNil(o.CheckReferrers) {
    return nil, false
	}
	return o.CheckReferrers, true
}

// HasCheckReferrers returns a boolean if a field has been set.
func (o *ChangeStatusDto) HasCheckReferrers() bool {
	if o != nil && !isNil(o.CheckReferrers) {
		return true
	}

	return false
}

// SetCheckReferrers gets a reference to the given bool and assigns it to the CheckReferrers field.
func (o *ChangeStatusDto) SetCheckReferrers(v bool) {
	o.CheckReferrers = &v
}

func (o ChangeStatusDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.DueTime.IsSet() {
		toSerialize["dueTime"] = o.DueTime.Get()
	}
	if !isNil(o.CheckReferrers) {
		toSerialize["checkReferrers"] = o.CheckReferrers
	}
	return json.Marshal(toSerialize)
}

type NullableChangeStatusDto struct {
	value *ChangeStatusDto
	isSet bool
}

func (v NullableChangeStatusDto) Get() *ChangeStatusDto {
	return v.value
}

func (v *NullableChangeStatusDto) Set(val *ChangeStatusDto) {
	v.value = val
	v.isSet = true
}

func (v NullableChangeStatusDto) IsSet() bool {
	return v.isSet
}

func (v *NullableChangeStatusDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangeStatusDto(val *ChangeStatusDto) *NullableChangeStatusDto {
	return &NullableChangeStatusDto{value: val, isSet: true}
}

func (v NullableChangeStatusDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangeStatusDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


