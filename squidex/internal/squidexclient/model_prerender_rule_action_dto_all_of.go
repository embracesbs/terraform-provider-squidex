/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// PrerenderRuleActionDtoAllOf struct for PrerenderRuleActionDtoAllOf
type PrerenderRuleActionDtoAllOf struct {
	// The prerender token from your account.
	Token string `json:"token"`
	// The url to recache.
	Url string `json:"url"`
}

// NewPrerenderRuleActionDtoAllOf instantiates a new PrerenderRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrerenderRuleActionDtoAllOf(token string, url string) *PrerenderRuleActionDtoAllOf {
	this := PrerenderRuleActionDtoAllOf{}
	this.Token = token
	this.Url = url
	return &this
}

// NewPrerenderRuleActionDtoAllOfWithDefaults instantiates a new PrerenderRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrerenderRuleActionDtoAllOfWithDefaults() *PrerenderRuleActionDtoAllOf {
	this := PrerenderRuleActionDtoAllOf{}
	return &this
}

// GetToken returns the Token field value
func (o *PrerenderRuleActionDtoAllOf) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *PrerenderRuleActionDtoAllOf) GetTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *PrerenderRuleActionDtoAllOf) SetToken(v string) {
	o.Token = v
}

// GetUrl returns the Url field value
func (o *PrerenderRuleActionDtoAllOf) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PrerenderRuleActionDtoAllOf) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PrerenderRuleActionDtoAllOf) SetUrl(v string) {
	o.Url = v
}

func (o PrerenderRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token"] = o.Token
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullablePrerenderRuleActionDtoAllOf struct {
	value *PrerenderRuleActionDtoAllOf
	isSet bool
}

func (v NullablePrerenderRuleActionDtoAllOf) Get() *PrerenderRuleActionDtoAllOf {
	return v.value
}

func (v *NullablePrerenderRuleActionDtoAllOf) Set(val *PrerenderRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePrerenderRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePrerenderRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrerenderRuleActionDtoAllOf(val *PrerenderRuleActionDtoAllOf) *NullablePrerenderRuleActionDtoAllOf {
	return &NullablePrerenderRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullablePrerenderRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrerenderRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


