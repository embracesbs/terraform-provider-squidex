/*
Squidex API

Testing PingApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package squidexclient

import (
	"context"
	"testing"

	"github.com/embracesbs/terraform-provider-squidex/squidex/internal/squidexclient"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_PingApiService(t *testing.T) {

	configuration := squidexclient.NewConfiguration()
	apiClient := squidexclient.NewAPIClient(configuration)

	t.Run("Test PingApiService PingGetAppPing", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var app string

		httpRes, err := apiClient.PingApi.PingGetAppPing(context.Background(), app).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingApiService PingGetInfo", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.PingApi.PingGetInfo(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PingApiService PingGetPing", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.PingApi.PingGetPing(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
