/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// SimulatedRuleEventsDtoAllOf struct for SimulatedRuleEventsDtoAllOf
type SimulatedRuleEventsDtoAllOf struct {
	// The simulated rule events.
	Items []SimulatedRuleEventDto `json:"items"`
	// The total number of simulated rule events.
	Total *int64 `json:"total,omitempty"`
}

// NewSimulatedRuleEventsDtoAllOf instantiates a new SimulatedRuleEventsDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimulatedRuleEventsDtoAllOf(items []SimulatedRuleEventDto) *SimulatedRuleEventsDtoAllOf {
	this := SimulatedRuleEventsDtoAllOf{}
	this.Items = items
	return &this
}

// NewSimulatedRuleEventsDtoAllOfWithDefaults instantiates a new SimulatedRuleEventsDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimulatedRuleEventsDtoAllOfWithDefaults() *SimulatedRuleEventsDtoAllOf {
	this := SimulatedRuleEventsDtoAllOf{}
	return &this
}

// GetItems returns the Items field value
func (o *SimulatedRuleEventsDtoAllOf) GetItems() []SimulatedRuleEventDto {
	if o == nil {
		var ret []SimulatedRuleEventDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *SimulatedRuleEventsDtoAllOf) GetItemsOk() ([]SimulatedRuleEventDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *SimulatedRuleEventsDtoAllOf) SetItems(v []SimulatedRuleEventDto) {
	o.Items = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *SimulatedRuleEventsDtoAllOf) GetTotal() int64 {
	if o == nil || isNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimulatedRuleEventsDtoAllOf) GetTotalOk() (*int64, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *SimulatedRuleEventsDtoAllOf) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *SimulatedRuleEventsDtoAllOf) SetTotal(v int64) {
	o.Total = &v
}

func (o SimulatedRuleEventsDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableSimulatedRuleEventsDtoAllOf struct {
	value *SimulatedRuleEventsDtoAllOf
	isSet bool
}

func (v NullableSimulatedRuleEventsDtoAllOf) Get() *SimulatedRuleEventsDtoAllOf {
	return v.value
}

func (v *NullableSimulatedRuleEventsDtoAllOf) Set(val *SimulatedRuleEventsDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSimulatedRuleEventsDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSimulatedRuleEventsDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimulatedRuleEventsDtoAllOf(val *SimulatedRuleEventsDtoAllOf) *NullableSimulatedRuleEventsDtoAllOf {
	return &NullableSimulatedRuleEventsDtoAllOf{value: val, isSet: true}
}

func (v NullableSimulatedRuleEventsDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimulatedRuleEventsDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


