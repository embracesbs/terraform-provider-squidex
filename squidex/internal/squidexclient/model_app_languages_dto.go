/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppLanguagesDto struct for AppLanguagesDto
type AppLanguagesDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The languages.
	Items []AppLanguageDto `json:"items"`
}

// NewAppLanguagesDto instantiates a new AppLanguagesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppLanguagesDto(links map[string]ResourceLink, items []AppLanguageDto) *AppLanguagesDto {
	this := AppLanguagesDto{}
	this.Links = links
	this.Items = items
	return &this
}

// NewAppLanguagesDtoWithDefaults instantiates a new AppLanguagesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppLanguagesDtoWithDefaults() *AppLanguagesDto {
	this := AppLanguagesDto{}
	return &this
}

// GetLinks returns the Links field value
func (o *AppLanguagesDto) GetLinks() map[string]ResourceLink {
	if o == nil {
		var ret map[string]ResourceLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *AppLanguagesDto) GetLinksOk() (*map[string]ResourceLink, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *AppLanguagesDto) SetLinks(v map[string]ResourceLink) {
	o.Links = v
}

// GetItems returns the Items field value
func (o *AppLanguagesDto) GetItems() []AppLanguageDto {
	if o == nil {
		var ret []AppLanguageDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *AppLanguagesDto) GetItemsOk() ([]AppLanguageDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *AppLanguagesDto) SetItems(v []AppLanguageDto) {
	o.Items = v
}

func (o AppLanguagesDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_links"] = o.Links
	}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableAppLanguagesDto struct {
	value *AppLanguagesDto
	isSet bool
}

func (v NullableAppLanguagesDto) Get() *AppLanguagesDto {
	return v.value
}

func (v *NullableAppLanguagesDto) Set(val *AppLanguagesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAppLanguagesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAppLanguagesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppLanguagesDto(val *AppLanguagesDto) *NullableAppLanguagesDto {
	return &NullableAppLanguagesDto{value: val, isSet: true}
}

func (v NullableAppLanguagesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppLanguagesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


