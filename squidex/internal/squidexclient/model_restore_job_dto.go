/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// RestoreJobDto struct for RestoreJobDto
type RestoreJobDto struct {
	// The uri to load from.
	Url string `json:"url"`
	// The status log.
	Log []string `json:"log"`
	// The time when the job has been started.
	Started *time.Time `json:"started,omitempty"`
	// The time when the job has been stopped.
	Stopped NullableTime `json:"stopped,omitempty"`
	Status *JobStatus `json:"status,omitempty"`
}

// NewRestoreJobDto instantiates a new RestoreJobDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreJobDto(url string, log []string) *RestoreJobDto {
	this := RestoreJobDto{}
	this.Url = url
	this.Log = log
	return &this
}

// NewRestoreJobDtoWithDefaults instantiates a new RestoreJobDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreJobDtoWithDefaults() *RestoreJobDto {
	this := RestoreJobDto{}
	return &this
}

// GetUrl returns the Url field value
func (o *RestoreJobDto) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *RestoreJobDto) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *RestoreJobDto) SetUrl(v string) {
	o.Url = v
}

// GetLog returns the Log field value
func (o *RestoreJobDto) GetLog() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Log
}

// GetLogOk returns a tuple with the Log field value
// and a boolean to check if the value has been set.
func (o *RestoreJobDto) GetLogOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Log, true
}

// SetLog sets field value
func (o *RestoreJobDto) SetLog(v []string) {
	o.Log = v
}

// GetStarted returns the Started field value if set, zero value otherwise.
func (o *RestoreJobDto) GetStarted() time.Time {
	if o == nil || isNil(o.Started) {
		var ret time.Time
		return ret
	}
	return *o.Started
}

// GetStartedOk returns a tuple with the Started field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobDto) GetStartedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Started) {
    return nil, false
	}
	return o.Started, true
}

// HasStarted returns a boolean if a field has been set.
func (o *RestoreJobDto) HasStarted() bool {
	if o != nil && !isNil(o.Started) {
		return true
	}

	return false
}

// SetStarted gets a reference to the given time.Time and assigns it to the Started field.
func (o *RestoreJobDto) SetStarted(v time.Time) {
	o.Started = &v
}

// GetStopped returns the Stopped field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RestoreJobDto) GetStopped() time.Time {
	if o == nil || isNil(o.Stopped.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Stopped.Get()
}

// GetStoppedOk returns a tuple with the Stopped field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RestoreJobDto) GetStoppedOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.Stopped.Get(), o.Stopped.IsSet()
}

// HasStopped returns a boolean if a field has been set.
func (o *RestoreJobDto) HasStopped() bool {
	if o != nil && o.Stopped.IsSet() {
		return true
	}

	return false
}

// SetStopped gets a reference to the given NullableTime and assigns it to the Stopped field.
func (o *RestoreJobDto) SetStopped(v time.Time) {
	o.Stopped.Set(&v)
}
// SetStoppedNil sets the value for Stopped to be an explicit nil
func (o *RestoreJobDto) SetStoppedNil() {
	o.Stopped.Set(nil)
}

// UnsetStopped ensures that no value is present for Stopped, not even an explicit nil
func (o *RestoreJobDto) UnsetStopped() {
	o.Stopped.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RestoreJobDto) GetStatus() JobStatus {
	if o == nil || isNil(o.Status) {
		var ret JobStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreJobDto) GetStatusOk() (*JobStatus, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RestoreJobDto) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given JobStatus and assigns it to the Status field.
func (o *RestoreJobDto) SetStatus(v JobStatus) {
	o.Status = &v
}

func (o RestoreJobDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["log"] = o.Log
	}
	if !isNil(o.Started) {
		toSerialize["started"] = o.Started
	}
	if o.Stopped.IsSet() {
		toSerialize["stopped"] = o.Stopped.Get()
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableRestoreJobDto struct {
	value *RestoreJobDto
	isSet bool
}

func (v NullableRestoreJobDto) Get() *RestoreJobDto {
	return v.value
}

func (v *NullableRestoreJobDto) Set(val *RestoreJobDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreJobDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreJobDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreJobDto(val *RestoreJobDto) *NullableRestoreJobDto {
	return &NullableRestoreJobDto{value: val, isSet: true}
}

func (v NullableRestoreJobDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreJobDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


