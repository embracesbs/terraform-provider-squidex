/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// BulkUpdateAssetsDto struct for BulkUpdateAssetsDto
type BulkUpdateAssetsDto struct {
	// The contents to update or insert.
	Jobs []BulkUpdateAssetsJobDto `json:"jobs"`
	// True to check referrers of deleted assets.
	CheckReferrers *bool `json:"checkReferrers,omitempty"`
	// True to turn off costly validation: Folder checks. Default: true.
	OptimizeValidation *bool `json:"optimizeValidation,omitempty"`
	// True to turn off scripting for faster inserts. Default: true.
	DoNotScript *bool `json:"doNotScript,omitempty"`
}

// NewBulkUpdateAssetsDto instantiates a new BulkUpdateAssetsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpdateAssetsDto(jobs []BulkUpdateAssetsJobDto) *BulkUpdateAssetsDto {
	this := BulkUpdateAssetsDto{}
	this.Jobs = jobs
	return &this
}

// NewBulkUpdateAssetsDtoWithDefaults instantiates a new BulkUpdateAssetsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpdateAssetsDtoWithDefaults() *BulkUpdateAssetsDto {
	this := BulkUpdateAssetsDto{}
	return &this
}

// GetJobs returns the Jobs field value
func (o *BulkUpdateAssetsDto) GetJobs() []BulkUpdateAssetsJobDto {
	if o == nil {
		var ret []BulkUpdateAssetsJobDto
		return ret
	}

	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsDto) GetJobsOk() ([]BulkUpdateAssetsJobDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Jobs, true
}

// SetJobs sets field value
func (o *BulkUpdateAssetsDto) SetJobs(v []BulkUpdateAssetsJobDto) {
	o.Jobs = v
}

// GetCheckReferrers returns the CheckReferrers field value if set, zero value otherwise.
func (o *BulkUpdateAssetsDto) GetCheckReferrers() bool {
	if o == nil || isNil(o.CheckReferrers) {
		var ret bool
		return ret
	}
	return *o.CheckReferrers
}

// GetCheckReferrersOk returns a tuple with the CheckReferrers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsDto) GetCheckReferrersOk() (*bool, bool) {
	if o == nil || isNil(o.CheckReferrers) {
    return nil, false
	}
	return o.CheckReferrers, true
}

// HasCheckReferrers returns a boolean if a field has been set.
func (o *BulkUpdateAssetsDto) HasCheckReferrers() bool {
	if o != nil && !isNil(o.CheckReferrers) {
		return true
	}

	return false
}

// SetCheckReferrers gets a reference to the given bool and assigns it to the CheckReferrers field.
func (o *BulkUpdateAssetsDto) SetCheckReferrers(v bool) {
	o.CheckReferrers = &v
}

// GetOptimizeValidation returns the OptimizeValidation field value if set, zero value otherwise.
func (o *BulkUpdateAssetsDto) GetOptimizeValidation() bool {
	if o == nil || isNil(o.OptimizeValidation) {
		var ret bool
		return ret
	}
	return *o.OptimizeValidation
}

// GetOptimizeValidationOk returns a tuple with the OptimizeValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsDto) GetOptimizeValidationOk() (*bool, bool) {
	if o == nil || isNil(o.OptimizeValidation) {
    return nil, false
	}
	return o.OptimizeValidation, true
}

// HasOptimizeValidation returns a boolean if a field has been set.
func (o *BulkUpdateAssetsDto) HasOptimizeValidation() bool {
	if o != nil && !isNil(o.OptimizeValidation) {
		return true
	}

	return false
}

// SetOptimizeValidation gets a reference to the given bool and assigns it to the OptimizeValidation field.
func (o *BulkUpdateAssetsDto) SetOptimizeValidation(v bool) {
	o.OptimizeValidation = &v
}

// GetDoNotScript returns the DoNotScript field value if set, zero value otherwise.
func (o *BulkUpdateAssetsDto) GetDoNotScript() bool {
	if o == nil || isNil(o.DoNotScript) {
		var ret bool
		return ret
	}
	return *o.DoNotScript
}

// GetDoNotScriptOk returns a tuple with the DoNotScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsDto) GetDoNotScriptOk() (*bool, bool) {
	if o == nil || isNil(o.DoNotScript) {
    return nil, false
	}
	return o.DoNotScript, true
}

// HasDoNotScript returns a boolean if a field has been set.
func (o *BulkUpdateAssetsDto) HasDoNotScript() bool {
	if o != nil && !isNil(o.DoNotScript) {
		return true
	}

	return false
}

// SetDoNotScript gets a reference to the given bool and assigns it to the DoNotScript field.
func (o *BulkUpdateAssetsDto) SetDoNotScript(v bool) {
	o.DoNotScript = &v
}

func (o BulkUpdateAssetsDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["jobs"] = o.Jobs
	}
	if !isNil(o.CheckReferrers) {
		toSerialize["checkReferrers"] = o.CheckReferrers
	}
	if !isNil(o.OptimizeValidation) {
		toSerialize["optimizeValidation"] = o.OptimizeValidation
	}
	if !isNil(o.DoNotScript) {
		toSerialize["doNotScript"] = o.DoNotScript
	}
	return json.Marshal(toSerialize)
}

type NullableBulkUpdateAssetsDto struct {
	value *BulkUpdateAssetsDto
	isSet bool
}

func (v NullableBulkUpdateAssetsDto) Get() *BulkUpdateAssetsDto {
	return v.value
}

func (v *NullableBulkUpdateAssetsDto) Set(val *BulkUpdateAssetsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateAssetsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateAssetsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateAssetsDto(val *BulkUpdateAssetsDto) *NullableBulkUpdateAssetsDto {
	return &NullableBulkUpdateAssetsDto{value: val, isSet: true}
}

func (v NullableBulkUpdateAssetsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateAssetsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


