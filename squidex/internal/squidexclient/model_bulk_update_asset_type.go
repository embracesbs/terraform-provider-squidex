/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
	"fmt"
)

// BulkUpdateAssetType 
type BulkUpdateAssetType string

// List of BulkUpdateAssetType
const (
	ANNOTATE BulkUpdateAssetType = "Annotate"
	MOVE BulkUpdateAssetType = "Move"
	DELETE BulkUpdateAssetType = "Delete"
)

// All allowed values of BulkUpdateAssetType enum
var AllowedBulkUpdateAssetTypeEnumValues = []BulkUpdateAssetType{
	"Annotate",
	"Move",
	"Delete",
}

func (v *BulkUpdateAssetType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BulkUpdateAssetType(value)
	for _, existing := range AllowedBulkUpdateAssetTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BulkUpdateAssetType", value)
}

// NewBulkUpdateAssetTypeFromValue returns a pointer to a valid BulkUpdateAssetType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBulkUpdateAssetTypeFromValue(v string) (*BulkUpdateAssetType, error) {
	ev := BulkUpdateAssetType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BulkUpdateAssetType: valid values are %v", v, AllowedBulkUpdateAssetTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BulkUpdateAssetType) IsValid() bool {
	for _, existing := range AllowedBulkUpdateAssetTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BulkUpdateAssetType value
func (v BulkUpdateAssetType) Ptr() *BulkUpdateAssetType {
	return &v
}

type NullableBulkUpdateAssetType struct {
	value *BulkUpdateAssetType
	isSet bool
}

func (v NullableBulkUpdateAssetType) Get() *BulkUpdateAssetType {
	return v.value
}

func (v *NullableBulkUpdateAssetType) Set(val *BulkUpdateAssetType) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateAssetType) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateAssetType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateAssetType(val *BulkUpdateAssetType) *NullableBulkUpdateAssetType {
	return &NullableBulkUpdateAssetType{value: val, isSet: true}
}

func (v NullableBulkUpdateAssetType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateAssetType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

