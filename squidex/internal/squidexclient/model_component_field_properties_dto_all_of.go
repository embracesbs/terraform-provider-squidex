/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// ComponentFieldPropertiesDtoAllOf struct for ComponentFieldPropertiesDtoAllOf
type ComponentFieldPropertiesDtoAllOf struct {
	// The id of the embedded schemas.
	SchemaIds []string `json:"schemaIds,omitempty"`
}

// NewComponentFieldPropertiesDtoAllOf instantiates a new ComponentFieldPropertiesDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentFieldPropertiesDtoAllOf() *ComponentFieldPropertiesDtoAllOf {
	this := ComponentFieldPropertiesDtoAllOf{}
	return &this
}

// NewComponentFieldPropertiesDtoAllOfWithDefaults instantiates a new ComponentFieldPropertiesDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentFieldPropertiesDtoAllOfWithDefaults() *ComponentFieldPropertiesDtoAllOf {
	this := ComponentFieldPropertiesDtoAllOf{}
	return &this
}

// GetSchemaIds returns the SchemaIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ComponentFieldPropertiesDtoAllOf) GetSchemaIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SchemaIds
}

// GetSchemaIdsOk returns a tuple with the SchemaIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ComponentFieldPropertiesDtoAllOf) GetSchemaIdsOk() ([]string, bool) {
	if o == nil || isNil(o.SchemaIds) {
    return nil, false
	}
	return o.SchemaIds, true
}

// HasSchemaIds returns a boolean if a field has been set.
func (o *ComponentFieldPropertiesDtoAllOf) HasSchemaIds() bool {
	if o != nil && isNil(o.SchemaIds) {
		return true
	}

	return false
}

// SetSchemaIds gets a reference to the given []string and assigns it to the SchemaIds field.
func (o *ComponentFieldPropertiesDtoAllOf) SetSchemaIds(v []string) {
	o.SchemaIds = v
}

func (o ComponentFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SchemaIds != nil {
		toSerialize["schemaIds"] = o.SchemaIds
	}
	return json.Marshal(toSerialize)
}

type NullableComponentFieldPropertiesDtoAllOf struct {
	value *ComponentFieldPropertiesDtoAllOf
	isSet bool
}

func (v NullableComponentFieldPropertiesDtoAllOf) Get() *ComponentFieldPropertiesDtoAllOf {
	return v.value
}

func (v *NullableComponentFieldPropertiesDtoAllOf) Set(val *ComponentFieldPropertiesDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentFieldPropertiesDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentFieldPropertiesDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentFieldPropertiesDtoAllOf(val *ComponentFieldPropertiesDtoAllOf) *NullableComponentFieldPropertiesDtoAllOf {
	return &NullableComponentFieldPropertiesDtoAllOf{value: val, isSet: true}
}

func (v NullableComponentFieldPropertiesDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentFieldPropertiesDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


