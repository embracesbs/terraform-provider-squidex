/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EmailRuleActionDtoAllOf struct for EmailRuleActionDtoAllOf
type EmailRuleActionDtoAllOf struct {
	// The IP address or host to the SMTP server.
	ServerHost string `json:"serverHost"`
	// The port to the SMTP server.
	ServerPort int32 `json:"serverPort"`
	// The username for the SMTP server.
	ServerUsername string `json:"serverUsername"`
	// The password for the SMTP server.
	ServerPassword string `json:"serverPassword"`
	// The email sending address.
	MessageFrom string `json:"messageFrom"`
	// The email message will be sent to.
	MessageTo string `json:"messageTo"`
	// The subject line for this email message.
	MessageSubject string `json:"messageSubject"`
	// The message body.
	MessageBody string `json:"messageBody"`
}

// NewEmailRuleActionDtoAllOf instantiates a new EmailRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailRuleActionDtoAllOf(serverHost string, serverPort int32, serverUsername string, serverPassword string, messageFrom string, messageTo string, messageSubject string, messageBody string) *EmailRuleActionDtoAllOf {
	this := EmailRuleActionDtoAllOf{}
	this.ServerHost = serverHost
	this.ServerPort = serverPort
	this.ServerUsername = serverUsername
	this.ServerPassword = serverPassword
	this.MessageFrom = messageFrom
	this.MessageTo = messageTo
	this.MessageSubject = messageSubject
	this.MessageBody = messageBody
	return &this
}

// NewEmailRuleActionDtoAllOfWithDefaults instantiates a new EmailRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailRuleActionDtoAllOfWithDefaults() *EmailRuleActionDtoAllOf {
	this := EmailRuleActionDtoAllOf{}
	return &this
}

// GetServerHost returns the ServerHost field value
func (o *EmailRuleActionDtoAllOf) GetServerHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerHost
}

// GetServerHostOk returns a tuple with the ServerHost field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetServerHostOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerHost, true
}

// SetServerHost sets field value
func (o *EmailRuleActionDtoAllOf) SetServerHost(v string) {
	o.ServerHost = v
}

// GetServerPort returns the ServerPort field value
func (o *EmailRuleActionDtoAllOf) GetServerPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetServerPortOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerPort, true
}

// SetServerPort sets field value
func (o *EmailRuleActionDtoAllOf) SetServerPort(v int32) {
	o.ServerPort = v
}

// GetServerUsername returns the ServerUsername field value
func (o *EmailRuleActionDtoAllOf) GetServerUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerUsername
}

// GetServerUsernameOk returns a tuple with the ServerUsername field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetServerUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerUsername, true
}

// SetServerUsername sets field value
func (o *EmailRuleActionDtoAllOf) SetServerUsername(v string) {
	o.ServerUsername = v
}

// GetServerPassword returns the ServerPassword field value
func (o *EmailRuleActionDtoAllOf) GetServerPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerPassword
}

// GetServerPasswordOk returns a tuple with the ServerPassword field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetServerPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerPassword, true
}

// SetServerPassword sets field value
func (o *EmailRuleActionDtoAllOf) SetServerPassword(v string) {
	o.ServerPassword = v
}

// GetMessageFrom returns the MessageFrom field value
func (o *EmailRuleActionDtoAllOf) GetMessageFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageFrom
}

// GetMessageFromOk returns a tuple with the MessageFrom field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetMessageFromOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MessageFrom, true
}

// SetMessageFrom sets field value
func (o *EmailRuleActionDtoAllOf) SetMessageFrom(v string) {
	o.MessageFrom = v
}

// GetMessageTo returns the MessageTo field value
func (o *EmailRuleActionDtoAllOf) GetMessageTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageTo
}

// GetMessageToOk returns a tuple with the MessageTo field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetMessageToOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MessageTo, true
}

// SetMessageTo sets field value
func (o *EmailRuleActionDtoAllOf) SetMessageTo(v string) {
	o.MessageTo = v
}

// GetMessageSubject returns the MessageSubject field value
func (o *EmailRuleActionDtoAllOf) GetMessageSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageSubject
}

// GetMessageSubjectOk returns a tuple with the MessageSubject field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetMessageSubjectOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MessageSubject, true
}

// SetMessageSubject sets field value
func (o *EmailRuleActionDtoAllOf) SetMessageSubject(v string) {
	o.MessageSubject = v
}

// GetMessageBody returns the MessageBody field value
func (o *EmailRuleActionDtoAllOf) GetMessageBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MessageBody
}

// GetMessageBodyOk returns a tuple with the MessageBody field value
// and a boolean to check if the value has been set.
func (o *EmailRuleActionDtoAllOf) GetMessageBodyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MessageBody, true
}

// SetMessageBody sets field value
func (o *EmailRuleActionDtoAllOf) SetMessageBody(v string) {
	o.MessageBody = v
}

func (o EmailRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serverHost"] = o.ServerHost
	}
	if true {
		toSerialize["serverPort"] = o.ServerPort
	}
	if true {
		toSerialize["serverUsername"] = o.ServerUsername
	}
	if true {
		toSerialize["serverPassword"] = o.ServerPassword
	}
	if true {
		toSerialize["messageFrom"] = o.MessageFrom
	}
	if true {
		toSerialize["messageTo"] = o.MessageTo
	}
	if true {
		toSerialize["messageSubject"] = o.MessageSubject
	}
	if true {
		toSerialize["messageBody"] = o.MessageBody
	}
	return json.Marshal(toSerialize)
}

type NullableEmailRuleActionDtoAllOf struct {
	value *EmailRuleActionDtoAllOf
	isSet bool
}

func (v NullableEmailRuleActionDtoAllOf) Get() *EmailRuleActionDtoAllOf {
	return v.value
}

func (v *NullableEmailRuleActionDtoAllOf) Set(val *EmailRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailRuleActionDtoAllOf(val *EmailRuleActionDtoAllOf) *NullableEmailRuleActionDtoAllOf {
	return &NullableEmailRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableEmailRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


