/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// CreateContentRuleActionDto struct for CreateContentRuleActionDto
type CreateContentRuleActionDto struct {
	RuleAction
	// The content data.
	Data string `json:"data"`
	// The name of the schema.
	Schema string `json:"schema"`
	// An optional client name.
	Client NullableString `json:"client,omitempty"`
	// Publish the content.
	Publish *bool `json:"publish,omitempty"`
}

// NewCreateContentRuleActionDto instantiates a new CreateContentRuleActionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContentRuleActionDto(data string, schema string, actionType NullableString) *CreateContentRuleActionDto {
	this := CreateContentRuleActionDto{}
	this.ActionType = actionType
	this.Data = data
	this.Schema = schema
	return &this
}

// NewCreateContentRuleActionDtoWithDefaults instantiates a new CreateContentRuleActionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContentRuleActionDtoWithDefaults() *CreateContentRuleActionDto {
	this := CreateContentRuleActionDto{}
	return &this
}

// GetData returns the Data field value
func (o *CreateContentRuleActionDto) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CreateContentRuleActionDto) GetDataOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CreateContentRuleActionDto) SetData(v string) {
	o.Data = v
}

// GetSchema returns the Schema field value
func (o *CreateContentRuleActionDto) GetSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value
// and a boolean to check if the value has been set.
func (o *CreateContentRuleActionDto) GetSchemaOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Schema, true
}

// SetSchema sets field value
func (o *CreateContentRuleActionDto) SetSchema(v string) {
	o.Schema = v
}

// GetClient returns the Client field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateContentRuleActionDto) GetClient() string {
	if o == nil || isNil(o.Client.Get()) {
		var ret string
		return ret
	}
	return *o.Client.Get()
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateContentRuleActionDto) GetClientOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Client.Get(), o.Client.IsSet()
}

// HasClient returns a boolean if a field has been set.
func (o *CreateContentRuleActionDto) HasClient() bool {
	if o != nil && o.Client.IsSet() {
		return true
	}

	return false
}

// SetClient gets a reference to the given NullableString and assigns it to the Client field.
func (o *CreateContentRuleActionDto) SetClient(v string) {
	o.Client.Set(&v)
}
// SetClientNil sets the value for Client to be an explicit nil
func (o *CreateContentRuleActionDto) SetClientNil() {
	o.Client.Set(nil)
}

// UnsetClient ensures that no value is present for Client, not even an explicit nil
func (o *CreateContentRuleActionDto) UnsetClient() {
	o.Client.Unset()
}

// GetPublish returns the Publish field value if set, zero value otherwise.
func (o *CreateContentRuleActionDto) GetPublish() bool {
	if o == nil || isNil(o.Publish) {
		var ret bool
		return ret
	}
	return *o.Publish
}

// GetPublishOk returns a tuple with the Publish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateContentRuleActionDto) GetPublishOk() (*bool, bool) {
	if o == nil || isNil(o.Publish) {
    return nil, false
	}
	return o.Publish, true
}

// HasPublish returns a boolean if a field has been set.
func (o *CreateContentRuleActionDto) HasPublish() bool {
	if o != nil && !isNil(o.Publish) {
		return true
	}

	return false
}

// SetPublish gets a reference to the given bool and assigns it to the Publish field.
func (o *CreateContentRuleActionDto) SetPublish(v bool) {
	o.Publish = &v
}

func (o CreateContentRuleActionDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedRuleAction, errRuleAction := json.Marshal(o.RuleAction)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	errRuleAction = json.Unmarshal([]byte(serializedRuleAction), &toSerialize)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["schema"] = o.Schema
	}
	if o.Client.IsSet() {
		toSerialize["client"] = o.Client.Get()
	}
	if !isNil(o.Publish) {
		toSerialize["publish"] = o.Publish
	}
	return json.Marshal(toSerialize)
}

type NullableCreateContentRuleActionDto struct {
	value *CreateContentRuleActionDto
	isSet bool
}

func (v NullableCreateContentRuleActionDto) Get() *CreateContentRuleActionDto {
	return v.value
}

func (v *NullableCreateContentRuleActionDto) Set(val *CreateContentRuleActionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContentRuleActionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContentRuleActionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContentRuleActionDto(val *CreateContentRuleActionDto) *NullableCreateContentRuleActionDto {
	return &NullableCreateContentRuleActionDto{value: val, isSet: true}
}

func (v NullableCreateContentRuleActionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContentRuleActionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


