/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// BulkUpdateAssetsJobDto struct for BulkUpdateAssetsJobDto
type BulkUpdateAssetsJobDto struct {
	// An optional id of the asset to update.
	Id *string `json:"id,omitempty"`
	Type *BulkUpdateAssetType `json:"type,omitempty"`
	// The parent folder id.
	ParentId *string `json:"parentId,omitempty"`
	// The new name of the asset.
	FileName NullableString `json:"fileName,omitempty"`
	// The new slug of the asset.
	Slug NullableString `json:"slug,omitempty"`
	// True, when the asset is not public.
	IsProtected NullableBool `json:"isProtected,omitempty"`
	// The new asset tags.
	Tags []string `json:"tags,omitempty"`
	// The asset metadata.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// True to delete the asset permanently.
	Permanent *bool `json:"permanent,omitempty"`
	// The expected version.
	ExpectedVersion *int64 `json:"expectedVersion,omitempty"`
}

// NewBulkUpdateAssetsJobDto instantiates a new BulkUpdateAssetsJobDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpdateAssetsJobDto() *BulkUpdateAssetsJobDto {
	this := BulkUpdateAssetsJobDto{}
	return &this
}

// NewBulkUpdateAssetsJobDtoWithDefaults instantiates a new BulkUpdateAssetsJobDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpdateAssetsJobDtoWithDefaults() *BulkUpdateAssetsJobDto {
	this := BulkUpdateAssetsJobDto{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BulkUpdateAssetsJobDto) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsJobDto) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BulkUpdateAssetsJobDto) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BulkUpdateAssetsJobDto) GetType() BulkUpdateAssetType {
	if o == nil || isNil(o.Type) {
		var ret BulkUpdateAssetType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsJobDto) GetTypeOk() (*BulkUpdateAssetType, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BulkUpdateAssetType and assigns it to the Type field.
func (o *BulkUpdateAssetsJobDto) SetType(v BulkUpdateAssetType) {
	o.Type = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BulkUpdateAssetsJobDto) GetParentId() string {
	if o == nil || isNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsJobDto) GetParentIdOk() (*string, bool) {
	if o == nil || isNil(o.ParentId) {
    return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasParentId() bool {
	if o != nil && !isNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BulkUpdateAssetsJobDto) SetParentId(v string) {
	o.ParentId = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateAssetsJobDto) GetFileName() string {
	if o == nil || isNil(o.FileName.Get()) {
		var ret string
		return ret
	}
	return *o.FileName.Get()
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateAssetsJobDto) GetFileNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileName.Get(), o.FileName.IsSet()
}

// HasFileName returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasFileName() bool {
	if o != nil && o.FileName.IsSet() {
		return true
	}

	return false
}

// SetFileName gets a reference to the given NullableString and assigns it to the FileName field.
func (o *BulkUpdateAssetsJobDto) SetFileName(v string) {
	o.FileName.Set(&v)
}
// SetFileNameNil sets the value for FileName to be an explicit nil
func (o *BulkUpdateAssetsJobDto) SetFileNameNil() {
	o.FileName.Set(nil)
}

// UnsetFileName ensures that no value is present for FileName, not even an explicit nil
func (o *BulkUpdateAssetsJobDto) UnsetFileName() {
	o.FileName.Unset()
}

// GetSlug returns the Slug field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateAssetsJobDto) GetSlug() string {
	if o == nil || isNil(o.Slug.Get()) {
		var ret string
		return ret
	}
	return *o.Slug.Get()
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateAssetsJobDto) GetSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Slug.Get(), o.Slug.IsSet()
}

// HasSlug returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasSlug() bool {
	if o != nil && o.Slug.IsSet() {
		return true
	}

	return false
}

// SetSlug gets a reference to the given NullableString and assigns it to the Slug field.
func (o *BulkUpdateAssetsJobDto) SetSlug(v string) {
	o.Slug.Set(&v)
}
// SetSlugNil sets the value for Slug to be an explicit nil
func (o *BulkUpdateAssetsJobDto) SetSlugNil() {
	o.Slug.Set(nil)
}

// UnsetSlug ensures that no value is present for Slug, not even an explicit nil
func (o *BulkUpdateAssetsJobDto) UnsetSlug() {
	o.Slug.Unset()
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateAssetsJobDto) GetIsProtected() bool {
	if o == nil || isNil(o.IsProtected.Get()) {
		var ret bool
		return ret
	}
	return *o.IsProtected.Get()
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateAssetsJobDto) GetIsProtectedOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return o.IsProtected.Get(), o.IsProtected.IsSet()
}

// HasIsProtected returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasIsProtected() bool {
	if o != nil && o.IsProtected.IsSet() {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given NullableBool and assigns it to the IsProtected field.
func (o *BulkUpdateAssetsJobDto) SetIsProtected(v bool) {
	o.IsProtected.Set(&v)
}
// SetIsProtectedNil sets the value for IsProtected to be an explicit nil
func (o *BulkUpdateAssetsJobDto) SetIsProtectedNil() {
	o.IsProtected.Set(nil)
}

// UnsetIsProtected ensures that no value is present for IsProtected, not even an explicit nil
func (o *BulkUpdateAssetsJobDto) UnsetIsProtected() {
	o.IsProtected.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateAssetsJobDto) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateAssetsJobDto) GetTagsOk() ([]string, bool) {
	if o == nil || isNil(o.Tags) {
    return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasTags() bool {
	if o != nil && isNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BulkUpdateAssetsJobDto) SetTags(v []string) {
	o.Tags = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateAssetsJobDto) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateAssetsJobDto) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
    return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *BulkUpdateAssetsJobDto) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetPermanent returns the Permanent field value if set, zero value otherwise.
func (o *BulkUpdateAssetsJobDto) GetPermanent() bool {
	if o == nil || isNil(o.Permanent) {
		var ret bool
		return ret
	}
	return *o.Permanent
}

// GetPermanentOk returns a tuple with the Permanent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsJobDto) GetPermanentOk() (*bool, bool) {
	if o == nil || isNil(o.Permanent) {
    return nil, false
	}
	return o.Permanent, true
}

// HasPermanent returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasPermanent() bool {
	if o != nil && !isNil(o.Permanent) {
		return true
	}

	return false
}

// SetPermanent gets a reference to the given bool and assigns it to the Permanent field.
func (o *BulkUpdateAssetsJobDto) SetPermanent(v bool) {
	o.Permanent = &v
}

// GetExpectedVersion returns the ExpectedVersion field value if set, zero value otherwise.
func (o *BulkUpdateAssetsJobDto) GetExpectedVersion() int64 {
	if o == nil || isNil(o.ExpectedVersion) {
		var ret int64
		return ret
	}
	return *o.ExpectedVersion
}

// GetExpectedVersionOk returns a tuple with the ExpectedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateAssetsJobDto) GetExpectedVersionOk() (*int64, bool) {
	if o == nil || isNil(o.ExpectedVersion) {
    return nil, false
	}
	return o.ExpectedVersion, true
}

// HasExpectedVersion returns a boolean if a field has been set.
func (o *BulkUpdateAssetsJobDto) HasExpectedVersion() bool {
	if o != nil && !isNil(o.ExpectedVersion) {
		return true
	}

	return false
}

// SetExpectedVersion gets a reference to the given int64 and assigns it to the ExpectedVersion field.
func (o *BulkUpdateAssetsJobDto) SetExpectedVersion(v int64) {
	o.ExpectedVersion = &v
}

func (o BulkUpdateAssetsJobDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if o.FileName.IsSet() {
		toSerialize["fileName"] = o.FileName.Get()
	}
	if o.Slug.IsSet() {
		toSerialize["slug"] = o.Slug.Get()
	}
	if o.IsProtected.IsSet() {
		toSerialize["isProtected"] = o.IsProtected.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.Permanent) {
		toSerialize["permanent"] = o.Permanent
	}
	if !isNil(o.ExpectedVersion) {
		toSerialize["expectedVersion"] = o.ExpectedVersion
	}
	return json.Marshal(toSerialize)
}

type NullableBulkUpdateAssetsJobDto struct {
	value *BulkUpdateAssetsJobDto
	isSet bool
}

func (v NullableBulkUpdateAssetsJobDto) Get() *BulkUpdateAssetsJobDto {
	return v.value
}

func (v *NullableBulkUpdateAssetsJobDto) Set(val *BulkUpdateAssetsJobDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateAssetsJobDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateAssetsJobDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateAssetsJobDto(val *BulkUpdateAssetsJobDto) *NullableBulkUpdateAssetsJobDto {
	return &NullableBulkUpdateAssetsJobDto{value: val, isSet: true}
}

func (v NullableBulkUpdateAssetsJobDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateAssetsJobDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


