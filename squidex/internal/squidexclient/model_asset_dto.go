/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AssetDto struct for AssetDto
type AssetDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The id of the asset.
	Id *string `json:"id,omitempty"`
	// The id of the parent folder. Empty for files without parent.
	ParentId *string `json:"parentId,omitempty"`
	// The file name.
	FileName string `json:"fileName"`
	// The file hash.
	FileHash NullableString `json:"fileHash,omitempty"`
	// True, when the asset is not public.
	IsProtected *bool `json:"isProtected,omitempty"`
	// The slug.
	Slug string `json:"slug"`
	// The mime type.
	MimeType string `json:"mimeType"`
	// The file type.
	FileType string `json:"fileType"`
	// The formatted text representation of the metadata.
	MetadataText string `json:"metadataText"`
	// The UI token.
	EditToken NullableString `json:"editToken,omitempty"`
	// The asset metadata.
	Metadata map[string]interface{} `json:"metadata"`
	// The asset tags.
	Tags []string `json:"tags"`
	// The size of the file in bytes.
	FileSize *int64 `json:"fileSize,omitempty"`
	// The version of the file.
	FileVersion *int64 `json:"fileVersion,omitempty"`
	Type *AssetType `json:"type,omitempty"`
	// The user that has created the schema.
	CreatedBy string `json:"createdBy"`
	// The user that has updated the asset.
	LastModifiedBy string `json:"lastModifiedBy"`
	// The date and time when the asset has been created.
	Created *time.Time `json:"created,omitempty"`
	// The date and time when the asset has been modified last.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// The version of the asset.
	Version *int64 `json:"version,omitempty"`
	Meta *AssetMeta `json:"_meta,omitempty"`
	// Determines of the created file is an image.
	// Deprecated
	IsImage *bool `json:"isImage,omitempty"`
	// The width of the image in pixels if the asset is an image.
	// Deprecated
	PixelWidth NullableInt32 `json:"pixelWidth,omitempty"`
	// The height of the image in pixels if the asset is an image.
	// Deprecated
	PixelHeight NullableInt32 `json:"pixelHeight,omitempty"`
}

// NewAssetDto instantiates a new AssetDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetDto(links map[string]ResourceLink, fileName string, slug string, mimeType string, fileType string, metadataText string, metadata map[string]interface{}, tags []string, createdBy string, lastModifiedBy string) *AssetDto {
	this := AssetDto{}
	this.Links = links
	this.FileName = fileName
	this.Slug = slug
	this.MimeType = mimeType
	this.FileType = fileType
	this.MetadataText = metadataText
	this.Metadata = metadata
	this.Tags = tags
	this.CreatedBy = createdBy
	this.LastModifiedBy = lastModifiedBy
	return &this
}

// NewAssetDtoWithDefaults instantiates a new AssetDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetDtoWithDefaults() *AssetDto {
	this := AssetDto{}
	return &this
}

// GetLinks returns the Links field value
func (o *AssetDto) GetLinks() map[string]ResourceLink {
	if o == nil {
		var ret map[string]ResourceLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetLinksOk() (*map[string]ResourceLink, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *AssetDto) SetLinks(v map[string]ResourceLink) {
	o.Links = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssetDto) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssetDto) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AssetDto) SetId(v string) {
	o.Id = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *AssetDto) GetParentId() string {
	if o == nil || isNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetParentIdOk() (*string, bool) {
	if o == nil || isNil(o.ParentId) {
    return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *AssetDto) HasParentId() bool {
	if o != nil && !isNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *AssetDto) SetParentId(v string) {
	o.ParentId = &v
}

// GetFileName returns the FileName field value
func (o *AssetDto) GetFileName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetFileNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FileName, true
}

// SetFileName sets field value
func (o *AssetDto) SetFileName(v string) {
	o.FileName = v
}

// GetFileHash returns the FileHash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetDto) GetFileHash() string {
	if o == nil || isNil(o.FileHash.Get()) {
		var ret string
		return ret
	}
	return *o.FileHash.Get()
}

// GetFileHashOk returns a tuple with the FileHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetDto) GetFileHashOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.FileHash.Get(), o.FileHash.IsSet()
}

// HasFileHash returns a boolean if a field has been set.
func (o *AssetDto) HasFileHash() bool {
	if o != nil && o.FileHash.IsSet() {
		return true
	}

	return false
}

// SetFileHash gets a reference to the given NullableString and assigns it to the FileHash field.
func (o *AssetDto) SetFileHash(v string) {
	o.FileHash.Set(&v)
}
// SetFileHashNil sets the value for FileHash to be an explicit nil
func (o *AssetDto) SetFileHashNil() {
	o.FileHash.Set(nil)
}

// UnsetFileHash ensures that no value is present for FileHash, not even an explicit nil
func (o *AssetDto) UnsetFileHash() {
	o.FileHash.Unset()
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *AssetDto) GetIsProtected() bool {
	if o == nil || isNil(o.IsProtected) {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetIsProtectedOk() (*bool, bool) {
	if o == nil || isNil(o.IsProtected) {
    return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *AssetDto) HasIsProtected() bool {
	if o != nil && !isNil(o.IsProtected) {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *AssetDto) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetSlug returns the Slug field value
func (o *AssetDto) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetSlugOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *AssetDto) SetSlug(v string) {
	o.Slug = v
}

// GetMimeType returns the MimeType field value
func (o *AssetDto) GetMimeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MimeType
}

// GetMimeTypeOk returns a tuple with the MimeType field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetMimeTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MimeType, true
}

// SetMimeType sets field value
func (o *AssetDto) SetMimeType(v string) {
	o.MimeType = v
}

// GetFileType returns the FileType field value
func (o *AssetDto) GetFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetFileTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FileType, true
}

// SetFileType sets field value
func (o *AssetDto) SetFileType(v string) {
	o.FileType = v
}

// GetMetadataText returns the MetadataText field value
func (o *AssetDto) GetMetadataText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetadataText
}

// GetMetadataTextOk returns a tuple with the MetadataText field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetMetadataTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MetadataText, true
}

// SetMetadataText sets field value
func (o *AssetDto) SetMetadataText(v string) {
	o.MetadataText = v
}

// GetEditToken returns the EditToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AssetDto) GetEditToken() string {
	if o == nil || isNil(o.EditToken.Get()) {
		var ret string
		return ret
	}
	return *o.EditToken.Get()
}

// GetEditTokenOk returns a tuple with the EditToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AssetDto) GetEditTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.EditToken.Get(), o.EditToken.IsSet()
}

// HasEditToken returns a boolean if a field has been set.
func (o *AssetDto) HasEditToken() bool {
	if o != nil && o.EditToken.IsSet() {
		return true
	}

	return false
}

// SetEditToken gets a reference to the given NullableString and assigns it to the EditToken field.
func (o *AssetDto) SetEditToken(v string) {
	o.EditToken.Set(&v)
}
// SetEditTokenNil sets the value for EditToken to be an explicit nil
func (o *AssetDto) SetEditTokenNil() {
	o.EditToken.Set(nil)
}

// UnsetEditToken ensures that no value is present for EditToken, not even an explicit nil
func (o *AssetDto) UnsetEditToken() {
	o.EditToken.Unset()
}

// GetMetadata returns the Metadata field value
func (o *AssetDto) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil {
    return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// SetMetadata sets field value
func (o *AssetDto) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetTags returns the Tags field value
func (o *AssetDto) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetTagsOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *AssetDto) SetTags(v []string) {
	o.Tags = v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *AssetDto) GetFileSize() int64 {
	if o == nil || isNil(o.FileSize) {
		var ret int64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetFileSizeOk() (*int64, bool) {
	if o == nil || isNil(o.FileSize) {
    return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *AssetDto) HasFileSize() bool {
	if o != nil && !isNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int64 and assigns it to the FileSize field.
func (o *AssetDto) SetFileSize(v int64) {
	o.FileSize = &v
}

// GetFileVersion returns the FileVersion field value if set, zero value otherwise.
func (o *AssetDto) GetFileVersion() int64 {
	if o == nil || isNil(o.FileVersion) {
		var ret int64
		return ret
	}
	return *o.FileVersion
}

// GetFileVersionOk returns a tuple with the FileVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetFileVersionOk() (*int64, bool) {
	if o == nil || isNil(o.FileVersion) {
    return nil, false
	}
	return o.FileVersion, true
}

// HasFileVersion returns a boolean if a field has been set.
func (o *AssetDto) HasFileVersion() bool {
	if o != nil && !isNil(o.FileVersion) {
		return true
	}

	return false
}

// SetFileVersion gets a reference to the given int64 and assigns it to the FileVersion field.
func (o *AssetDto) SetFileVersion(v int64) {
	o.FileVersion = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AssetDto) GetType() AssetType {
	if o == nil || isNil(o.Type) {
		var ret AssetType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetTypeOk() (*AssetType, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AssetDto) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AssetType and assigns it to the Type field.
func (o *AssetDto) SetType(v AssetType) {
	o.Type = &v
}

// GetCreatedBy returns the CreatedBy field value
func (o *AssetDto) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetCreatedByOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *AssetDto) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetLastModifiedBy returns the LastModifiedBy field value
func (o *AssetDto) GetLastModifiedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value
// and a boolean to check if the value has been set.
func (o *AssetDto) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastModifiedBy, true
}

// SetLastModifiedBy sets field value
func (o *AssetDto) SetLastModifiedBy(v string) {
	o.LastModifiedBy = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AssetDto) GetCreated() time.Time {
	if o == nil || isNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetCreatedOk() (*time.Time, bool) {
	if o == nil || isNil(o.Created) {
    return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AssetDto) HasCreated() bool {
	if o != nil && !isNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AssetDto) SetCreated(v time.Time) {
	o.Created = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AssetDto) GetLastModified() time.Time {
	if o == nil || isNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastModified) {
    return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AssetDto) HasLastModified() bool {
	if o != nil && !isNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *AssetDto) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AssetDto) GetVersion() int64 {
	if o == nil || isNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetVersionOk() (*int64, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AssetDto) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *AssetDto) SetVersion(v int64) {
	o.Version = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AssetDto) GetMeta() AssetMeta {
	if o == nil || isNil(o.Meta) {
		var ret AssetMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetDto) GetMetaOk() (*AssetMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AssetDto) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given AssetMeta and assigns it to the Meta field.
func (o *AssetDto) SetMeta(v AssetMeta) {
	o.Meta = &v
}

// GetIsImage returns the IsImage field value if set, zero value otherwise.
// Deprecated
func (o *AssetDto) GetIsImage() bool {
	if o == nil || isNil(o.IsImage) {
		var ret bool
		return ret
	}
	return *o.IsImage
}

// GetIsImageOk returns a tuple with the IsImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *AssetDto) GetIsImageOk() (*bool, bool) {
	if o == nil || isNil(o.IsImage) {
    return nil, false
	}
	return o.IsImage, true
}

// HasIsImage returns a boolean if a field has been set.
func (o *AssetDto) HasIsImage() bool {
	if o != nil && !isNil(o.IsImage) {
		return true
	}

	return false
}

// SetIsImage gets a reference to the given bool and assigns it to the IsImage field.
// Deprecated
func (o *AssetDto) SetIsImage(v bool) {
	o.IsImage = &v
}

// GetPixelWidth returns the PixelWidth field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *AssetDto) GetPixelWidth() int32 {
	if o == nil || isNil(o.PixelWidth.Get()) {
		var ret int32
		return ret
	}
	return *o.PixelWidth.Get()
}

// GetPixelWidthOk returns a tuple with the PixelWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *AssetDto) GetPixelWidthOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.PixelWidth.Get(), o.PixelWidth.IsSet()
}

// HasPixelWidth returns a boolean if a field has been set.
func (o *AssetDto) HasPixelWidth() bool {
	if o != nil && o.PixelWidth.IsSet() {
		return true
	}

	return false
}

// SetPixelWidth gets a reference to the given NullableInt32 and assigns it to the PixelWidth field.
// Deprecated
func (o *AssetDto) SetPixelWidth(v int32) {
	o.PixelWidth.Set(&v)
}
// SetPixelWidthNil sets the value for PixelWidth to be an explicit nil
func (o *AssetDto) SetPixelWidthNil() {
	o.PixelWidth.Set(nil)
}

// UnsetPixelWidth ensures that no value is present for PixelWidth, not even an explicit nil
func (o *AssetDto) UnsetPixelWidth() {
	o.PixelWidth.Unset()
}

// GetPixelHeight returns the PixelHeight field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *AssetDto) GetPixelHeight() int32 {
	if o == nil || isNil(o.PixelHeight.Get()) {
		var ret int32
		return ret
	}
	return *o.PixelHeight.Get()
}

// GetPixelHeightOk returns a tuple with the PixelHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *AssetDto) GetPixelHeightOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.PixelHeight.Get(), o.PixelHeight.IsSet()
}

// HasPixelHeight returns a boolean if a field has been set.
func (o *AssetDto) HasPixelHeight() bool {
	if o != nil && o.PixelHeight.IsSet() {
		return true
	}

	return false
}

// SetPixelHeight gets a reference to the given NullableInt32 and assigns it to the PixelHeight field.
// Deprecated
func (o *AssetDto) SetPixelHeight(v int32) {
	o.PixelHeight.Set(&v)
}
// SetPixelHeightNil sets the value for PixelHeight to be an explicit nil
func (o *AssetDto) SetPixelHeightNil() {
	o.PixelHeight.Set(nil)
}

// UnsetPixelHeight ensures that no value is present for PixelHeight, not even an explicit nil
func (o *AssetDto) UnsetPixelHeight() {
	o.PixelHeight.Unset()
}

func (o AssetDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_links"] = o.Links
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if true {
		toSerialize["fileName"] = o.FileName
	}
	if o.FileHash.IsSet() {
		toSerialize["fileHash"] = o.FileHash.Get()
	}
	if !isNil(o.IsProtected) {
		toSerialize["isProtected"] = o.IsProtected
	}
	if true {
		toSerialize["slug"] = o.Slug
	}
	if true {
		toSerialize["mimeType"] = o.MimeType
	}
	if true {
		toSerialize["fileType"] = o.FileType
	}
	if true {
		toSerialize["metadataText"] = o.MetadataText
	}
	if o.EditToken.IsSet() {
		toSerialize["editToken"] = o.EditToken.Get()
	}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if !isNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !isNil(o.FileVersion) {
		toSerialize["fileVersion"] = o.FileVersion
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if true {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !isNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !isNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !isNil(o.Meta) {
		toSerialize["_meta"] = o.Meta
	}
	if !isNil(o.IsImage) {
		toSerialize["isImage"] = o.IsImage
	}
	if o.PixelWidth.IsSet() {
		toSerialize["pixelWidth"] = o.PixelWidth.Get()
	}
	if o.PixelHeight.IsSet() {
		toSerialize["pixelHeight"] = o.PixelHeight.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableAssetDto struct {
	value *AssetDto
	isSet bool
}

func (v NullableAssetDto) Get() *AssetDto {
	return v.value
}

func (v *NullableAssetDto) Set(val *AssetDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetDto(val *AssetDto) *NullableAssetDto {
	return &NullableAssetDto{value: val, isSet: true}
}

func (v NullableAssetDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


