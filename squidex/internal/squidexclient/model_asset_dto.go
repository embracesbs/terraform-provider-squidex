/*
 * Squidex API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 5.3.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package squidexclient
import (
	"time"
)
// AssetDto struct for AssetDto
type AssetDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The id of the asset.
	Id string `json:"id,omitempty"`
	// The id of the parent folder. Empty for files without parent.
	ParentId string `json:"parentId,omitempty"`
	// The file name.
	FileName string `json:"fileName"`
	// The file hash.
	FileHash *string `json:"fileHash,omitempty"`
	// True, when the asset is not public.
	IsProtected bool `json:"isProtected,omitempty"`
	// The slug.
	Slug string `json:"slug"`
	// The mime type.
	MimeType string `json:"mimeType"`
	// The file type.
	FileType string `json:"fileType"`
	// The formatted text representation of the metadata.
	MetadataText string `json:"metadataText"`
	// The asset metadata.
	Metadata map[string]interface{} `json:"metadata"`
	// The asset tags.
	Tags []string `json:"tags"`
	// The size of the file in bytes.
	FileSize int64 `json:"fileSize,omitempty"`
	// The version of the file.
	FileVersion int64 `json:"fileVersion,omitempty"`
	// The type of the asset.
	Type AssetType `json:"type,omitempty"`
	// The user that has created the schema.
	CreatedBy string `json:"createdBy"`
	// The user that has updated the asset.
	LastModifiedBy string `json:"lastModifiedBy"`
	// The date and time when the asset has been created.
	Created time.Time `json:"created,omitempty"`
	// The date and time when the asset has been modified last.
	LastModified time.Time `json:"lastModified,omitempty"`
	// The version of the asset.
	Version int64 `json:"version,omitempty"`
	// The metadata.
	Meta AssetMeta `json:"_meta,omitempty"`
	// Determines of the created file is an image.
	IsImage bool `json:"isImage,omitempty"`
	// The width of the image in pixels if the asset is an image.
	PixelWidth *int32 `json:"pixelWidth,omitempty"`
	// The height of the image in pixels if the asset is an image.
	PixelHeight *int32 `json:"pixelHeight,omitempty"`
}
