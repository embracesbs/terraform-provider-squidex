/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebhookRuleActionDto struct for WebhookRuleActionDto
type WebhookRuleActionDto struct {
	RuleAction
	// The url to the webhook.
	Url string `json:"url"`
	Method WebhookMethod `json:"method"`
	// Leave it empty to use the full event as body.
	Payload NullableString `json:"payload,omitempty"`
	// The mime type of the payload.
	PayloadType NullableString `json:"payloadType,omitempty"`
	// The message headers in the format '[Key]=[Value]', one entry per line.
	Headers NullableString `json:"headers,omitempty"`
	// The shared secret that is used to calculate the payload signature.
	SharedSecret NullableString `json:"sharedSecret,omitempty"`
}

// NewWebhookRuleActionDto instantiates a new WebhookRuleActionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookRuleActionDto(url string, method WebhookMethod, actionType NullableString) *WebhookRuleActionDto {
	this := WebhookRuleActionDto{}
	this.ActionType = actionType
	this.Url = url
	this.Method = method
	return &this
}

// NewWebhookRuleActionDtoWithDefaults instantiates a new WebhookRuleActionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookRuleActionDtoWithDefaults() *WebhookRuleActionDto {
	this := WebhookRuleActionDto{}
	return &this
}

// GetUrl returns the Url field value
func (o *WebhookRuleActionDto) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookRuleActionDto) GetUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookRuleActionDto) SetUrl(v string) {
	o.Url = v
}

// GetMethod returns the Method field value
func (o *WebhookRuleActionDto) GetMethod() WebhookMethod {
	if o == nil {
		var ret WebhookMethod
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *WebhookRuleActionDto) GetMethodOk() (*WebhookMethod, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *WebhookRuleActionDto) SetMethod(v WebhookMethod) {
	o.Method = v
}

// GetPayload returns the Payload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookRuleActionDto) GetPayload() string {
	if o == nil || isNil(o.Payload.Get()) {
		var ret string
		return ret
	}
	return *o.Payload.Get()
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookRuleActionDto) GetPayloadOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Payload.Get(), o.Payload.IsSet()
}

// HasPayload returns a boolean if a field has been set.
func (o *WebhookRuleActionDto) HasPayload() bool {
	if o != nil && o.Payload.IsSet() {
		return true
	}

	return false
}

// SetPayload gets a reference to the given NullableString and assigns it to the Payload field.
func (o *WebhookRuleActionDto) SetPayload(v string) {
	o.Payload.Set(&v)
}
// SetPayloadNil sets the value for Payload to be an explicit nil
func (o *WebhookRuleActionDto) SetPayloadNil() {
	o.Payload.Set(nil)
}

// UnsetPayload ensures that no value is present for Payload, not even an explicit nil
func (o *WebhookRuleActionDto) UnsetPayload() {
	o.Payload.Unset()
}

// GetPayloadType returns the PayloadType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookRuleActionDto) GetPayloadType() string {
	if o == nil || isNil(o.PayloadType.Get()) {
		var ret string
		return ret
	}
	return *o.PayloadType.Get()
}

// GetPayloadTypeOk returns a tuple with the PayloadType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookRuleActionDto) GetPayloadTypeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.PayloadType.Get(), o.PayloadType.IsSet()
}

// HasPayloadType returns a boolean if a field has been set.
func (o *WebhookRuleActionDto) HasPayloadType() bool {
	if o != nil && o.PayloadType.IsSet() {
		return true
	}

	return false
}

// SetPayloadType gets a reference to the given NullableString and assigns it to the PayloadType field.
func (o *WebhookRuleActionDto) SetPayloadType(v string) {
	o.PayloadType.Set(&v)
}
// SetPayloadTypeNil sets the value for PayloadType to be an explicit nil
func (o *WebhookRuleActionDto) SetPayloadTypeNil() {
	o.PayloadType.Set(nil)
}

// UnsetPayloadType ensures that no value is present for PayloadType, not even an explicit nil
func (o *WebhookRuleActionDto) UnsetPayloadType() {
	o.PayloadType.Unset()
}

// GetHeaders returns the Headers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookRuleActionDto) GetHeaders() string {
	if o == nil || isNil(o.Headers.Get()) {
		var ret string
		return ret
	}
	return *o.Headers.Get()
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookRuleActionDto) GetHeadersOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Headers.Get(), o.Headers.IsSet()
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebhookRuleActionDto) HasHeaders() bool {
	if o != nil && o.Headers.IsSet() {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given NullableString and assigns it to the Headers field.
func (o *WebhookRuleActionDto) SetHeaders(v string) {
	o.Headers.Set(&v)
}
// SetHeadersNil sets the value for Headers to be an explicit nil
func (o *WebhookRuleActionDto) SetHeadersNil() {
	o.Headers.Set(nil)
}

// UnsetHeaders ensures that no value is present for Headers, not even an explicit nil
func (o *WebhookRuleActionDto) UnsetHeaders() {
	o.Headers.Unset()
}

// GetSharedSecret returns the SharedSecret field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebhookRuleActionDto) GetSharedSecret() string {
	if o == nil || isNil(o.SharedSecret.Get()) {
		var ret string
		return ret
	}
	return *o.SharedSecret.Get()
}

// GetSharedSecretOk returns a tuple with the SharedSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookRuleActionDto) GetSharedSecretOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.SharedSecret.Get(), o.SharedSecret.IsSet()
}

// HasSharedSecret returns a boolean if a field has been set.
func (o *WebhookRuleActionDto) HasSharedSecret() bool {
	if o != nil && o.SharedSecret.IsSet() {
		return true
	}

	return false
}

// SetSharedSecret gets a reference to the given NullableString and assigns it to the SharedSecret field.
func (o *WebhookRuleActionDto) SetSharedSecret(v string) {
	o.SharedSecret.Set(&v)
}
// SetSharedSecretNil sets the value for SharedSecret to be an explicit nil
func (o *WebhookRuleActionDto) SetSharedSecretNil() {
	o.SharedSecret.Set(nil)
}

// UnsetSharedSecret ensures that no value is present for SharedSecret, not even an explicit nil
func (o *WebhookRuleActionDto) UnsetSharedSecret() {
	o.SharedSecret.Unset()
}

func (o WebhookRuleActionDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedRuleAction, errRuleAction := json.Marshal(o.RuleAction)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	errRuleAction = json.Unmarshal([]byte(serializedRuleAction), &toSerialize)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["method"] = o.Method
	}
	if o.Payload.IsSet() {
		toSerialize["payload"] = o.Payload.Get()
	}
	if o.PayloadType.IsSet() {
		toSerialize["payloadType"] = o.PayloadType.Get()
	}
	if o.Headers.IsSet() {
		toSerialize["headers"] = o.Headers.Get()
	}
	if o.SharedSecret.IsSet() {
		toSerialize["sharedSecret"] = o.SharedSecret.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookRuleActionDto struct {
	value *WebhookRuleActionDto
	isSet bool
}

func (v NullableWebhookRuleActionDto) Get() *WebhookRuleActionDto {
	return v.value
}

func (v *NullableWebhookRuleActionDto) Set(val *WebhookRuleActionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookRuleActionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookRuleActionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookRuleActionDto(val *WebhookRuleActionDto) *NullableWebhookRuleActionDto {
	return &NullableWebhookRuleActionDto{value: val, isSet: true}
}

func (v NullableWebhookRuleActionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookRuleActionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


