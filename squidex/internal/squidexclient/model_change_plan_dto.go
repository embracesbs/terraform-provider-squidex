/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChangePlanDto struct for ChangePlanDto
type ChangePlanDto struct {
	// The new plan id.
	PlanId string `json:"planId"`
}

// NewChangePlanDto instantiates a new ChangePlanDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChangePlanDto(planId string) *ChangePlanDto {
	this := ChangePlanDto{}
	this.PlanId = planId
	return &this
}

// NewChangePlanDtoWithDefaults instantiates a new ChangePlanDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChangePlanDtoWithDefaults() *ChangePlanDto {
	this := ChangePlanDto{}
	return &this
}

// GetPlanId returns the PlanId field value
func (o *ChangePlanDto) GetPlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value
// and a boolean to check if the value has been set.
func (o *ChangePlanDto) GetPlanIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PlanId, true
}

// SetPlanId sets field value
func (o *ChangePlanDto) SetPlanId(v string) {
	o.PlanId = v
}

func (o ChangePlanDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["planId"] = o.PlanId
	}
	return json.Marshal(toSerialize)
}

type NullableChangePlanDto struct {
	value *ChangePlanDto
	isSet bool
}

func (v NullableChangePlanDto) Get() *ChangePlanDto {
	return v.value
}

func (v *NullableChangePlanDto) Set(val *ChangePlanDto) {
	v.value = val
	v.isSet = true
}

func (v NullableChangePlanDto) IsSet() bool {
	return v.isSet
}

func (v *NullableChangePlanDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChangePlanDto(val *ChangePlanDto) *NullableChangePlanDto {
	return &NullableChangePlanDto{value: val, isSet: true}
}

func (v NullableChangePlanDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChangePlanDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


