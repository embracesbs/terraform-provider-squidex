/*
 * Squidex API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 7.0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package squidexclient

import (
	"time"
)

// BulkUpdateContentsJobDto struct for BulkUpdateContentsJobDto
type BulkUpdateContentsJobDto struct {
	Query QueryJsonDto `json:"query,omitempty"`
	// An optional id of the content to update.
	Id   *string                           `json:"id,omitempty"`
	Data map[string]map[string]interface{} `json:"data,omitempty"`
	// The new status when the type is set to 'ChangeStatus' or 'Upsert'.
	Status *string `json:"status,omitempty"`
	// The due time.
	DueTime *time.Time            `json:"dueTime,omitempty"`
	Type    BulkUpdateContentType `json:"type,omitempty"`
	// The optional schema id or name.
	Schema *string `json:"schema,omitempty"`
	// Makes the update as patch.
	Patch bool `json:"patch,omitempty"`
	// True to delete the content permanently.
	Permanent bool `json:"permanent,omitempty"`
	// The number of expected items. Set it to a higher number to update multiple items when a query is defined.
	ExpectedCount int64 `json:"expectedCount,omitempty"`
	// The expected version.
	ExpectedVersion int64 `json:"expectedVersion,omitempty"`
}
