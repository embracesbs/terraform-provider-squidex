/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
	"time"
)

// BulkUpdateContentsJobDto struct for BulkUpdateContentsJobDto
type BulkUpdateContentsJobDto struct {
	Query *QueryJsonDto `json:"query,omitempty"`
	// An optional id of the content to update.
	Id NullableString `json:"id,omitempty"`
	Data *map[string]map[string]interface{} `json:"data,omitempty"`
	// The new status when the type is set to 'ChangeStatus' or 'Upsert'.
	Status NullableString `json:"status,omitempty"`
	// The due time.
	DueTime NullableTime `json:"dueTime,omitempty"`
	Type *BulkUpdateContentType `json:"type,omitempty"`
	// The optional schema id or name.
	Schema NullableString `json:"schema,omitempty"`
	// Makes the update as patch.
	Patch *bool `json:"patch,omitempty"`
	// True to delete the content permanently.
	Permanent *bool `json:"permanent,omitempty"`
	// The number of expected items. Set it to a higher number to update multiple items when a query is defined.
	ExpectedCount *int64 `json:"expectedCount,omitempty"`
	// The expected version.
	ExpectedVersion *int64 `json:"expectedVersion,omitempty"`
}

// NewBulkUpdateContentsJobDto instantiates a new BulkUpdateContentsJobDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkUpdateContentsJobDto() *BulkUpdateContentsJobDto {
	this := BulkUpdateContentsJobDto{}
	return &this
}

// NewBulkUpdateContentsJobDtoWithDefaults instantiates a new BulkUpdateContentsJobDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkUpdateContentsJobDtoWithDefaults() *BulkUpdateContentsJobDto {
	this := BulkUpdateContentsJobDto{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetQuery() QueryJsonDto {
	if o == nil || isNil(o.Query) {
		var ret QueryJsonDto
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetQueryOk() (*QueryJsonDto, bool) {
	if o == nil || isNil(o.Query) {
    return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasQuery() bool {
	if o != nil && !isNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given QueryJsonDto and assigns it to the Query field.
func (o *BulkUpdateContentsJobDto) SetQuery(v QueryJsonDto) {
	o.Query = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateContentsJobDto) GetId() string {
	if o == nil || isNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateContentsJobDto) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *BulkUpdateContentsJobDto) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *BulkUpdateContentsJobDto) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *BulkUpdateContentsJobDto) UnsetId() {
	o.Id.Unset()
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetData() map[string]map[string]interface{} {
	if o == nil || isNil(o.Data) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetDataOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || isNil(o.Data) {
    return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]map[string]interface{} and assigns it to the Data field.
func (o *BulkUpdateContentsJobDto) SetData(v map[string]map[string]interface{}) {
	o.Data = &v
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateContentsJobDto) GetStatus() string {
	if o == nil || isNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateContentsJobDto) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *BulkUpdateContentsJobDto) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *BulkUpdateContentsJobDto) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *BulkUpdateContentsJobDto) UnsetStatus() {
	o.Status.Unset()
}

// GetDueTime returns the DueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateContentsJobDto) GetDueTime() time.Time {
	if o == nil || isNil(o.DueTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DueTime.Get()
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateContentsJobDto) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
    return nil, false
	}
	return o.DueTime.Get(), o.DueTime.IsSet()
}

// HasDueTime returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasDueTime() bool {
	if o != nil && o.DueTime.IsSet() {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given NullableTime and assigns it to the DueTime field.
func (o *BulkUpdateContentsJobDto) SetDueTime(v time.Time) {
	o.DueTime.Set(&v)
}
// SetDueTimeNil sets the value for DueTime to be an explicit nil
func (o *BulkUpdateContentsJobDto) SetDueTimeNil() {
	o.DueTime.Set(nil)
}

// UnsetDueTime ensures that no value is present for DueTime, not even an explicit nil
func (o *BulkUpdateContentsJobDto) UnsetDueTime() {
	o.DueTime.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetType() BulkUpdateContentType {
	if o == nil || isNil(o.Type) {
		var ret BulkUpdateContentType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetTypeOk() (*BulkUpdateContentType, bool) {
	if o == nil || isNil(o.Type) {
    return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given BulkUpdateContentType and assigns it to the Type field.
func (o *BulkUpdateContentsJobDto) SetType(v BulkUpdateContentType) {
	o.Type = &v
}

// GetSchema returns the Schema field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BulkUpdateContentsJobDto) GetSchema() string {
	if o == nil || isNil(o.Schema.Get()) {
		var ret string
		return ret
	}
	return *o.Schema.Get()
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BulkUpdateContentsJobDto) GetSchemaOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schema.Get(), o.Schema.IsSet()
}

// HasSchema returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasSchema() bool {
	if o != nil && o.Schema.IsSet() {
		return true
	}

	return false
}

// SetSchema gets a reference to the given NullableString and assigns it to the Schema field.
func (o *BulkUpdateContentsJobDto) SetSchema(v string) {
	o.Schema.Set(&v)
}
// SetSchemaNil sets the value for Schema to be an explicit nil
func (o *BulkUpdateContentsJobDto) SetSchemaNil() {
	o.Schema.Set(nil)
}

// UnsetSchema ensures that no value is present for Schema, not even an explicit nil
func (o *BulkUpdateContentsJobDto) UnsetSchema() {
	o.Schema.Unset()
}

// GetPatch returns the Patch field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetPatch() bool {
	if o == nil || isNil(o.Patch) {
		var ret bool
		return ret
	}
	return *o.Patch
}

// GetPatchOk returns a tuple with the Patch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetPatchOk() (*bool, bool) {
	if o == nil || isNil(o.Patch) {
    return nil, false
	}
	return o.Patch, true
}

// HasPatch returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasPatch() bool {
	if o != nil && !isNil(o.Patch) {
		return true
	}

	return false
}

// SetPatch gets a reference to the given bool and assigns it to the Patch field.
func (o *BulkUpdateContentsJobDto) SetPatch(v bool) {
	o.Patch = &v
}

// GetPermanent returns the Permanent field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetPermanent() bool {
	if o == nil || isNil(o.Permanent) {
		var ret bool
		return ret
	}
	return *o.Permanent
}

// GetPermanentOk returns a tuple with the Permanent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetPermanentOk() (*bool, bool) {
	if o == nil || isNil(o.Permanent) {
    return nil, false
	}
	return o.Permanent, true
}

// HasPermanent returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasPermanent() bool {
	if o != nil && !isNil(o.Permanent) {
		return true
	}

	return false
}

// SetPermanent gets a reference to the given bool and assigns it to the Permanent field.
func (o *BulkUpdateContentsJobDto) SetPermanent(v bool) {
	o.Permanent = &v
}

// GetExpectedCount returns the ExpectedCount field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetExpectedCount() int64 {
	if o == nil || isNil(o.ExpectedCount) {
		var ret int64
		return ret
	}
	return *o.ExpectedCount
}

// GetExpectedCountOk returns a tuple with the ExpectedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetExpectedCountOk() (*int64, bool) {
	if o == nil || isNil(o.ExpectedCount) {
    return nil, false
	}
	return o.ExpectedCount, true
}

// HasExpectedCount returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasExpectedCount() bool {
	if o != nil && !isNil(o.ExpectedCount) {
		return true
	}

	return false
}

// SetExpectedCount gets a reference to the given int64 and assigns it to the ExpectedCount field.
func (o *BulkUpdateContentsJobDto) SetExpectedCount(v int64) {
	o.ExpectedCount = &v
}

// GetExpectedVersion returns the ExpectedVersion field value if set, zero value otherwise.
func (o *BulkUpdateContentsJobDto) GetExpectedVersion() int64 {
	if o == nil || isNil(o.ExpectedVersion) {
		var ret int64
		return ret
	}
	return *o.ExpectedVersion
}

// GetExpectedVersionOk returns a tuple with the ExpectedVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BulkUpdateContentsJobDto) GetExpectedVersionOk() (*int64, bool) {
	if o == nil || isNil(o.ExpectedVersion) {
    return nil, false
	}
	return o.ExpectedVersion, true
}

// HasExpectedVersion returns a boolean if a field has been set.
func (o *BulkUpdateContentsJobDto) HasExpectedVersion() bool {
	if o != nil && !isNil(o.ExpectedVersion) {
		return true
	}

	return false
}

// SetExpectedVersion gets a reference to the given int64 and assigns it to the ExpectedVersion field.
func (o *BulkUpdateContentsJobDto) SetExpectedVersion(v int64) {
	o.ExpectedVersion = &v
}

func (o BulkUpdateContentsJobDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.DueTime.IsSet() {
		toSerialize["dueTime"] = o.DueTime.Get()
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Schema.IsSet() {
		toSerialize["schema"] = o.Schema.Get()
	}
	if !isNil(o.Patch) {
		toSerialize["patch"] = o.Patch
	}
	if !isNil(o.Permanent) {
		toSerialize["permanent"] = o.Permanent
	}
	if !isNil(o.ExpectedCount) {
		toSerialize["expectedCount"] = o.ExpectedCount
	}
	if !isNil(o.ExpectedVersion) {
		toSerialize["expectedVersion"] = o.ExpectedVersion
	}
	return json.Marshal(toSerialize)
}

type NullableBulkUpdateContentsJobDto struct {
	value *BulkUpdateContentsJobDto
	isSet bool
}

func (v NullableBulkUpdateContentsJobDto) Get() *BulkUpdateContentsJobDto {
	return v.value
}

func (v *NullableBulkUpdateContentsJobDto) Set(val *BulkUpdateContentsJobDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkUpdateContentsJobDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkUpdateContentsJobDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkUpdateContentsJobDto(val *BulkUpdateContentsJobDto) *NullableBulkUpdateContentsJobDto {
	return &NullableBulkUpdateContentsJobDto{value: val, isSet: true}
}

func (v NullableBulkUpdateContentsJobDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkUpdateContentsJobDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


