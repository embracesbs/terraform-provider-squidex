/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateAppDto struct for CreateAppDto
type CreateAppDto struct {
	// The name of the app.
	Name string `json:"name"`
	// Initialize the app with the inbuilt template.
	Template NullableString `json:"template,omitempty"`
}

// NewCreateAppDto instantiates a new CreateAppDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAppDto(name string) *CreateAppDto {
	this := CreateAppDto{}
	this.Name = name
	return &this
}

// NewCreateAppDtoWithDefaults instantiates a new CreateAppDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAppDtoWithDefaults() *CreateAppDto {
	this := CreateAppDto{}
	return &this
}

// GetName returns the Name field value
func (o *CreateAppDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAppDto) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAppDto) SetName(v string) {
	o.Name = v
}

// GetTemplate returns the Template field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAppDto) GetTemplate() string {
	if o == nil || isNil(o.Template.Get()) {
		var ret string
		return ret
	}
	return *o.Template.Get()
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAppDto) GetTemplateOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Template.Get(), o.Template.IsSet()
}

// HasTemplate returns a boolean if a field has been set.
func (o *CreateAppDto) HasTemplate() bool {
	if o != nil && o.Template.IsSet() {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given NullableString and assigns it to the Template field.
func (o *CreateAppDto) SetTemplate(v string) {
	o.Template.Set(&v)
}
// SetTemplateNil sets the value for Template to be an explicit nil
func (o *CreateAppDto) SetTemplateNil() {
	o.Template.Set(nil)
}

// UnsetTemplate ensures that no value is present for Template, not even an explicit nil
func (o *CreateAppDto) UnsetTemplate() {
	o.Template.Unset()
}

func (o CreateAppDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Template.IsSet() {
		toSerialize["template"] = o.Template.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAppDto struct {
	value *CreateAppDto
	isSet bool
}

func (v NullableCreateAppDto) Get() *CreateAppDto {
	return v.value
}

func (v *NullableCreateAppDto) Set(val *CreateAppDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAppDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAppDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAppDto(val *CreateAppDto) *NullableCreateAppDto {
	return &NullableCreateAppDto{value: val, isSet: true}
}

func (v NullableCreateAppDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAppDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


