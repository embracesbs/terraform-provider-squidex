/*
 * Squidex API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 5.3.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */
package squidexclient

// FieldPropertiesDtoBACKUP struct for FieldPropertiesDto
// All ...DefaultValues fields: if partitioning=language, then there is a default for each language, otherwise use defaultvalue field
type FieldPropertiesDtoBACKUP struct {

	// common fields:

	// Label Optional label for the editor.
	Label *string `json:"label,omitempty"`
	// Hints to describe the schema.
	Hints *string `json:"hints,omitempty"`
	// Placeholder to show when no value has been entered.
	Placeholder *string `json:"placeholder,omitempty"`
	// IsRequired Indicates if the field is required.
	IsRequired bool `json:"isRequired,omitempty"`
	// IsHalfWidth Indicates if the field should be rendered with half width only.
	IsHalfWidth bool `json:"isHalfWidth,omitempty"`
	// EditorUrl Optional url to the editor.
	EditorUrl *string `json:"editorUrl,omitempty"`
	// Tags for automation processes.
	Tags *[]string `json:"tags,omitempty"`
	// FieldType, depending the field type there are other fields required (prefixed with fieldType) other are ignored.
	FieldType string `json:"fieldType"`

	// type specific fields:

	// ArrayMinItems The minimum allowed items for the field value.
	ArrayMinItems *int `json:"minItems,omitempty"`
	// ArrayMaxItems The maximum allowed items for the field value.
	ArrayMaxItems *int `json:"maxItems,omitempty"`

	// AssetsPreviewMode The preview mode for the asset.
	// Options: ImageAndFileName Image FileName
	AssetsPreviewMode *string `json:"previewMode,omitempty"`
	// AssetsDefaultValues The language specific default value as a list of asset ids.
	// Options: {"nl-NL": ["asset1","asset2"]}
	AssetsDefaultValues *map[string][]string `json:"defaultValues,omitempty"`
	// AssetsDefaultValue The default value for the field value.
	AssetsDefaultValue *[]string `json:"defaultValue,omitempty"`
	// AssetsMinItems The minimum allowed items for the field value.
	AssetsMinItems *int `json:"minItems,omitempty"`
	// AssetsMaxItems The maximum allowed items for the field value.
	AssetsMaxItems *int `json:"maxItems,omitempty"`
	// AssetsMinSize The minimum file size in bytes.
	AssetsMinSize *int `json:"minSize,omitempty"`
	// AssetsMaxSize The maximum file size in bytes.
	AssetsMaxSize *int `json:"maxSize,omitempty"`
	// AssetsMinWidth The minimum image width in pixels.
	AssetsMinWidth *int `json:"minWidth,omitempty"`
	// AssetsMaxWidth The maximum image width in pixels.
	AssetsMaxWidth *int `json:"maxWidth,omitempty"`
	// AssetsMinHeight The minimum image height in pixels.
	AssetsMinHeight *int `json:"minHeight,omitempty"`
	// AssetsMaxHeight The maximum image height in pixels.
	AssetsMaxHeight *int `json:"maxHeight,omitempty"`
	// AssetsAspectWidth The image aspect width in pixels.
	AssetsAspectWidth *int `json:"aspectWidth,omitempty"`
	// AssetsAspectHeight The image aspect height in pixels.
	AssetsAspectHeight *int `json:"aspectHeight,omitempty"`
	// AssetsMustBeImage Defines if the asset must be an image.
	AssetsMustBeImage *bool `json:"mustBeImage,omitempty"`
	// AssetsResolveFirst True to resolve first asset in the content list.
	AssetsResolveFirst *bool `json:"resolveFirst,omitempty"`
	// AssetsAllowedExtensions The allowed file extensions.
	AssetsAllowedExtensions *[]string `json:"allowedExtensions,omitempty"`
	// AssetsAllowDuplicates True, if duplicate values are allowed.
	AssetsAllowDuplicates *bool `json:"allowDuplicates,omitempty"`

	// BooleanDefaultValues The language specific default value for the field value.
	// Options: {"nl-NL": true}
	BooleanDefaultValues *map[string]bool `json:"defaultValues,omitempty"`
	// BooleanDefaultValue The default value for the field value.
	BooleanDefaultValue *bool `json:"defaultValue,omitempty"`
	// BooleanInlineEditable Indicates that the inline editor is enabled for this field. (Required for fieldtype boolean)
	BooleanInlineEditable *bool `json:"inlineEditable,omitempty"`
	// BooleanEditor The editor that is used to manage this field.
	// Options: Checkbox Toggle
	BooleanEditor *string `json:"editor,omitempty"`

	// DateTimeDefaultValues The language specific default value for the field value.
	// Options: {"nl-NL":"2021-01-13T16:07:25Z"}
	DateTimeDefaultValues *map[string]string `json:"defaultValues,omitempty"`
	// DateTimeDefaultValue The default value for the field value.
	DateTimeDefaultValue *string `json:"defaultValue,omitempty"`
	// DateTimeMaxValue The maximum allowed value for the field value.
	DateTimeMaxValue *string `json:"maxValue,omitempty"`
	// DateTimeMinValue The minimum allowed value for the field value.
	DateTimeMinValue *string `json:"minValue,omitempty"`
	// DateTimeEditor The editor that is used to manage this field.
	// Options: DateTime Date
	DateTimeEditor *string `json:"editor,omitempty"`
	// DateTimeCalculatedDefaultValue The calculated default value for the field value.
	// Options: Now Today (or leave empty for none)
	DateTimeCalculatedDefaultValue *string `json:"calculatedDefaultValue,omitempty"`

	// GeoLocationEditor The editor that is used to manage this field.
	// Options Map (only has 1 atm)
	GeoLocationEditor *string `json:"editor,omitempty"`

	// Json (has no unique props)

	// NumberDefaultValues The language specific default value for the field value.
	// Options: {"nl-NL": 10.9}
	NumberDefaultValues *map[string]float32 `json:"defaultValues,omitempty"`
	// NumberDefaultValue The default value for the field value.
	NumberDefaultValue *float32 `json:"defaultValue,omitempty"`
	// NumberMaxValue The maximum allowed value for the field value.
	NumberMaxValue *float32 `json:"maxValue,omitempty"`
	// NumberMinValue The minimum allowed value for the field value.
	NumberMinValue *float32 `json:"minValue,omitempty"`
	// NumberAllowedValues The allowed values for the field value.
	NumberAllowedValues *[]float32 `json:"allowedValues,omitempty"`
	// NumberUnique Indicates if the field value must be unique. Ignored for nested fields and localized fields. (Required for fieldtype number)
	NumberUnique *bool `json:"isUnique,omitempty"`
	// NumberInlineEditable Indicates that the inline editor is enabled for this field. (Required for fieldtype number)
	NumberInlineEditable *bool `json:"inlineEditable,omitempty"`
	// NumberEditor The editor that is used to manage this field.
	// Options: Input Radio Dropdown Stars
	NumberEditor *string `json:"editor,omitempty"`

	// ReferencesDefaultValues The language specific default value as a list of content ids.
	// Options: {"nl-NL": ["reference1","reference2"]}
	ReferencesDefaultValues *map[string][]string `json:"defaultValues,omitempty"`
	// ReferencesDefaultValue The default value as a list of content ids.
	ReferencesDefaultValue *[]string `json:"defaultValue,omitempty"`
	// ReferencesMinItems The minimum allowed items for the field value.
	ReferencesMinItems *int `json:"minItems,omitempty"`
	// ReferencesMaxItems The maximum allowed items for the field value.
	ReferencesMaxItems *int `json:"maxItems,omitempty"`
	// ReferencesAllowDuplicates True, if duplicate values are allowed. (Required for fieldtype References)
	ReferencesAllowDuplicates *bool `json:"allowDuplicates,omitempty"`
	// ReferencesResolveReference True to resolve references in the content list. (Required for fieldtype References)
	ReferencesResolveReference *bool `json:"resolveReference,omitempty"`
	// ReferencesMustBePublished True when all references must be published. (Required for fieldtype References)
	ReferencesMustBePublished *bool `json:"mustBePublished,omitempty"`
	// ReferencesEditor The editor that is used to manage this field. (Required for fieldtype References)
	// Options: List Dropdown Checkboxes Tags
	ReferencesEditor *string `json:"editor,omitempty"`
	// ReferencesschemaIds The id of the referenced schemas.
	ReferencesschemaIds *[]string `json:"schemaIds,omitempty"`

	// StringDefaultValues The language specific default value as a list of content ids.
	// Options: {"nl-NL": "defaultval"}
	StringDefaultValues *map[string]string `json:"defaultValues,omitempty"`
	// StringDefaultValue The default value as a list of content ids.
	StringDefaultValue *string `json:"defaultValue,omitempty"`
	// StringPattern The pattern to enforce a specific format for the field value.
	StringPattern *string `json:"pattern,omitempty"`
	// StringPatternMessage The validation message for the pattern.
	StringPatternMessage *string `json:"patternMessage,omitempty"`
	// StringMinLength The minimum allowed length for the field value.
	StringMinLength *int `json:"minLength,omitempty"`
	// StringMaxLength The maximum allowed length for the field value.
	StringMaxLength *int `json:"maxLength,omitempty"`
	// StringMinCharacters The minimum allowed of normal characters for the field value.
	StringMinCharacters *int `json:"minCharacters,omitempty"`
	// StringMaxCharacters The maximum allowed of normal characters for the field value.
	StringMaxCharacters *int `json:"maxCharacters,omitempty"`
	// StringMinWords The minimum allowed number of words for the field value.
	StringMinWords *int `json:"minWords,omitempty"`
	// StringMaxWords The maximum allowed number of words for the field value.
	StringMaxWords *int `json:"maxWords,omitempty"`
	// StringAllowedValues The allowed values for the field value.
	StringAllowedValues *[]string `json:"allowedValues,omitempty"`
	// StringUnique Indicates if the field value must be unique. Ignored for nested fields and localized fields. (Required for fieldtype string)
	StringUnique *bool `json:"isUnique,omitempty"`
	// StringInlineEditable Indicates that the inline editor is enabled for this field. (Required for fieldtype string)
	StringInlineEditable *bool `json:"inlineEditable,omitempty"`
	// StringContentType How the string content should be interpreted. (Required for fieldtype string)
	// Options: Unspecified Markdown Html
	StringContentType *string `json:"contentType,omitempty"`
	// StringEditor The editor that is used to manage this field. (Required for fieldtype string)
	// Options: Input Slug TextArea RichText Markdown Dropdown Radio Color Html StockPhoto
	StringEditor *string `json:"editor,omitempty"`

	// TagsDefaultValues The language specific default value for the field value.
	// Options: {"nl-NL": ["tag1","tag2"]}
	TagsDefaultValues *map[string][]string `json:"defaultValues,omitempty"`
	// TagsDefaultValue The default value.
	TagsDefaultValue *[]string `json:"defaultValue,omitempty"`
	// TagsMinItems The minimum allowed items for the field value.
	TagsMinItems *int `json:"minItems,omitempty"`
	// TagsMaxItems The maximum allowed items for the field value.
	TagsMaxItems *int `json:"maxItems,omitempty"`
	// TagsAllowedValues The allowed values for the field value.
	TagsAllowedValues *[]string `json:"allowedValues,omitempty"`
	// TagsEditor The editor that is used to manage this field. (Required for fieldtype string)
	// Options: Tags Checkboxes Dropdown
	TagsEditor *string `json:"editor,omitempty"`

	// UIEditor The editor that is used to manage this field. (Required for fieldtype string)
	// Options: Separator
	UIEditor *string `json:"editor,omitempty"`
}
