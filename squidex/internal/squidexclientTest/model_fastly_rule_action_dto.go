/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// FastlyRuleActionDto struct for FastlyRuleActionDto
type FastlyRuleActionDto struct {
	RuleAction
	// The API key to grant access to Squidex.
	ApiKey string `json:"apiKey"`
	// The ID of the fastly service.
	ServiceId string `json:"serviceId"`
}

// NewFastlyRuleActionDto instantiates a new FastlyRuleActionDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFastlyRuleActionDto(apiKey string, serviceId string, actionType NullableString) *FastlyRuleActionDto {
	this := FastlyRuleActionDto{}
	this.ActionType = actionType
	this.ApiKey = apiKey
	this.ServiceId = serviceId
	return &this
}

// NewFastlyRuleActionDtoWithDefaults instantiates a new FastlyRuleActionDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFastlyRuleActionDtoWithDefaults() *FastlyRuleActionDto {
	this := FastlyRuleActionDto{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *FastlyRuleActionDto) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *FastlyRuleActionDto) GetApiKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *FastlyRuleActionDto) SetApiKey(v string) {
	o.ApiKey = v
}

// GetServiceId returns the ServiceId field value
func (o *FastlyRuleActionDto) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *FastlyRuleActionDto) GetServiceIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *FastlyRuleActionDto) SetServiceId(v string) {
	o.ServiceId = v
}

func (o FastlyRuleActionDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedRuleAction, errRuleAction := json.Marshal(o.RuleAction)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	errRuleAction = json.Unmarshal([]byte(serializedRuleAction), &toSerialize)
	if errRuleAction != nil {
		return []byte{}, errRuleAction
	}
	if true {
		toSerialize["apiKey"] = o.ApiKey
	}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableFastlyRuleActionDto struct {
	value *FastlyRuleActionDto
	isSet bool
}

func (v NullableFastlyRuleActionDto) Get() *FastlyRuleActionDto {
	return v.value
}

func (v *NullableFastlyRuleActionDto) Set(val *FastlyRuleActionDto) {
	v.value = val
	v.isSet = true
}

func (v NullableFastlyRuleActionDto) IsSet() bool {
	return v.isSet
}

func (v *NullableFastlyRuleActionDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFastlyRuleActionDto(val *FastlyRuleActionDto) *NullableFastlyRuleActionDto {
	return &NullableFastlyRuleActionDto{value: val, isSet: true}
}

func (v NullableFastlyRuleActionDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFastlyRuleActionDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


