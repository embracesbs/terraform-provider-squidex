/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// CommentRuleActionDtoAllOf struct for CommentRuleActionDtoAllOf
type CommentRuleActionDtoAllOf struct {
	// The comment text.
	Text string `json:"text"`
	// An optional client name.
	Client NullableString `json:"client,omitempty"`
}

// NewCommentRuleActionDtoAllOf instantiates a new CommentRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentRuleActionDtoAllOf(text string) *CommentRuleActionDtoAllOf {
	this := CommentRuleActionDtoAllOf{}
	this.Text = text
	return &this
}

// NewCommentRuleActionDtoAllOfWithDefaults instantiates a new CommentRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentRuleActionDtoAllOfWithDefaults() *CommentRuleActionDtoAllOf {
	this := CommentRuleActionDtoAllOf{}
	return &this
}

// GetText returns the Text field value
func (o *CommentRuleActionDtoAllOf) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *CommentRuleActionDtoAllOf) GetTextOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *CommentRuleActionDtoAllOf) SetText(v string) {
	o.Text = v
}

// GetClient returns the Client field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommentRuleActionDtoAllOf) GetClient() string {
	if o == nil || isNil(o.Client.Get()) {
		var ret string
		return ret
	}
	return *o.Client.Get()
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommentRuleActionDtoAllOf) GetClientOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Client.Get(), o.Client.IsSet()
}

// HasClient returns a boolean if a field has been set.
func (o *CommentRuleActionDtoAllOf) HasClient() bool {
	if o != nil && o.Client.IsSet() {
		return true
	}

	return false
}

// SetClient gets a reference to the given NullableString and assigns it to the Client field.
func (o *CommentRuleActionDtoAllOf) SetClient(v string) {
	o.Client.Set(&v)
}
// SetClientNil sets the value for Client to be an explicit nil
func (o *CommentRuleActionDtoAllOf) SetClientNil() {
	o.Client.Set(nil)
}

// UnsetClient ensures that no value is present for Client, not even an explicit nil
func (o *CommentRuleActionDtoAllOf) UnsetClient() {
	o.Client.Unset()
}

func (o CommentRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["text"] = o.Text
	}
	if o.Client.IsSet() {
		toSerialize["client"] = o.Client.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCommentRuleActionDtoAllOf struct {
	value *CommentRuleActionDtoAllOf
	isSet bool
}

func (v NullableCommentRuleActionDtoAllOf) Get() *CommentRuleActionDtoAllOf {
	return v.value
}

func (v *NullableCommentRuleActionDtoAllOf) Set(val *CommentRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentRuleActionDtoAllOf(val *CommentRuleActionDtoAllOf) *NullableCommentRuleActionDtoAllOf {
	return &NullableCommentRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableCommentRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


