/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// AssetFolderDtoAllOf struct for AssetFolderDtoAllOf
type AssetFolderDtoAllOf struct {
	// The id of the asset.
	Id *string `json:"id,omitempty"`
	// The id of the parent folder. Empty for files without parent.
	ParentId *string `json:"parentId,omitempty"`
	// The folder name.
	FolderName string `json:"folderName"`
	// The version of the asset folder.
	Version *int64 `json:"version,omitempty"`
}

// NewAssetFolderDtoAllOf instantiates a new AssetFolderDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetFolderDtoAllOf(folderName string) *AssetFolderDtoAllOf {
	this := AssetFolderDtoAllOf{}
	this.FolderName = folderName
	return &this
}

// NewAssetFolderDtoAllOfWithDefaults instantiates a new AssetFolderDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetFolderDtoAllOfWithDefaults() *AssetFolderDtoAllOf {
	this := AssetFolderDtoAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AssetFolderDtoAllOf) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFolderDtoAllOf) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AssetFolderDtoAllOf) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AssetFolderDtoAllOf) SetId(v string) {
	o.Id = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *AssetFolderDtoAllOf) GetParentId() string {
	if o == nil || isNil(o.ParentId) {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFolderDtoAllOf) GetParentIdOk() (*string, bool) {
	if o == nil || isNil(o.ParentId) {
    return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *AssetFolderDtoAllOf) HasParentId() bool {
	if o != nil && !isNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *AssetFolderDtoAllOf) SetParentId(v string) {
	o.ParentId = &v
}

// GetFolderName returns the FolderName field value
func (o *AssetFolderDtoAllOf) GetFolderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderName
}

// GetFolderNameOk returns a tuple with the FolderName field value
// and a boolean to check if the value has been set.
func (o *AssetFolderDtoAllOf) GetFolderNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FolderName, true
}

// SetFolderName sets field value
func (o *AssetFolderDtoAllOf) SetFolderName(v string) {
	o.FolderName = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AssetFolderDtoAllOf) GetVersion() int64 {
	if o == nil || isNil(o.Version) {
		var ret int64
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetFolderDtoAllOf) GetVersionOk() (*int64, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AssetFolderDtoAllOf) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int64 and assigns it to the Version field.
func (o *AssetFolderDtoAllOf) SetVersion(v int64) {
	o.Version = &v
}

func (o AssetFolderDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	if true {
		toSerialize["folderName"] = o.FolderName
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableAssetFolderDtoAllOf struct {
	value *AssetFolderDtoAllOf
	isSet bool
}

func (v NullableAssetFolderDtoAllOf) Get() *AssetFolderDtoAllOf {
	return v.value
}

func (v *NullableAssetFolderDtoAllOf) Set(val *AssetFolderDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetFolderDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetFolderDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetFolderDtoAllOf(val *AssetFolderDtoAllOf) *NullableAssetFolderDtoAllOf {
	return &NullableAssetFolderDtoAllOf{value: val, isSet: true}
}

func (v NullableAssetFolderDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetFolderDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


