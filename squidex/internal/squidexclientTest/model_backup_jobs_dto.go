/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// BackupJobsDto struct for BackupJobsDto
type BackupJobsDto struct {
	// The links.
	Links map[string]ResourceLink `json:"_links"`
	// The backups.
	Items []BackupJobDto `json:"items"`
}

// NewBackupJobsDto instantiates a new BackupJobsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobsDto(links map[string]ResourceLink, items []BackupJobDto) *BackupJobsDto {
	this := BackupJobsDto{}
	this.Links = links
	this.Items = items
	return &this
}

// NewBackupJobsDtoWithDefaults instantiates a new BackupJobsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobsDtoWithDefaults() *BackupJobsDto {
	this := BackupJobsDto{}
	return &this
}

// GetLinks returns the Links field value
func (o *BackupJobsDto) GetLinks() map[string]ResourceLink {
	if o == nil {
		var ret map[string]ResourceLink
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *BackupJobsDto) GetLinksOk() (*map[string]ResourceLink, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *BackupJobsDto) SetLinks(v map[string]ResourceLink) {
	o.Links = v
}

// GetItems returns the Items field value
func (o *BackupJobsDto) GetItems() []BackupJobDto {
	if o == nil {
		var ret []BackupJobDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *BackupJobsDto) GetItemsOk() ([]BackupJobDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *BackupJobsDto) SetItems(v []BackupJobDto) {
	o.Items = v
}

func (o BackupJobsDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["_links"] = o.Links
	}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobsDto struct {
	value *BackupJobsDto
	isSet bool
}

func (v NullableBackupJobsDto) Get() *BackupJobsDto {
	return v.value
}

func (v *NullableBackupJobsDto) Set(val *BackupJobsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobsDto(val *BackupJobsDto) *NullableBackupJobsDto {
	return &NullableBackupJobsDto{value: val, isSet: true}
}

func (v NullableBackupJobsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


