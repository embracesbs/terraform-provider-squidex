/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// BackupJobsDtoAllOf struct for BackupJobsDtoAllOf
type BackupJobsDtoAllOf struct {
	// The backups.
	Items []BackupJobDto `json:"items"`
}

// NewBackupJobsDtoAllOf instantiates a new BackupJobsDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupJobsDtoAllOf(items []BackupJobDto) *BackupJobsDtoAllOf {
	this := BackupJobsDtoAllOf{}
	this.Items = items
	return &this
}

// NewBackupJobsDtoAllOfWithDefaults instantiates a new BackupJobsDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupJobsDtoAllOfWithDefaults() *BackupJobsDtoAllOf {
	this := BackupJobsDtoAllOf{}
	return &this
}

// GetItems returns the Items field value
func (o *BackupJobsDtoAllOf) GetItems() []BackupJobDto {
	if o == nil {
		var ret []BackupJobDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *BackupJobsDtoAllOf) GetItemsOk() ([]BackupJobDto, bool) {
	if o == nil {
    return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *BackupJobsDtoAllOf) SetItems(v []BackupJobDto) {
	o.Items = v
}

func (o BackupJobsDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableBackupJobsDtoAllOf struct {
	value *BackupJobsDtoAllOf
	isSet bool
}

func (v NullableBackupJobsDtoAllOf) Get() *BackupJobsDtoAllOf {
	return v.value
}

func (v *NullableBackupJobsDtoAllOf) Set(val *BackupJobsDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupJobsDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupJobsDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupJobsDtoAllOf(val *BackupJobsDtoAllOf) *NullableBackupJobsDtoAllOf {
	return &NullableBackupJobsDtoAllOf{value: val, isSet: true}
}

func (v NullableBackupJobsDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupJobsDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


