/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// MediumRuleActionDtoAllOf struct for MediumRuleActionDtoAllOf
type MediumRuleActionDtoAllOf struct {
	// The self issued access token.
	AccessToken string `json:"accessToken"`
	// The title, used for the url.
	Title string `json:"title"`
	// The content, either html or markdown.
	Content string `json:"content"`
	// The original home of this content, if it was originally published elsewhere.
	CanonicalUrl NullableString `json:"canonicalUrl,omitempty"`
	// The optional comma separated list of tags.
	Tags NullableString `json:"tags,omitempty"`
	// Optional publication id.
	PublicationId NullableString `json:"publicationId,omitempty"`
	// Indicates whether the content is markdown or html.
	IsHtml *bool `json:"isHtml,omitempty"`
}

// NewMediumRuleActionDtoAllOf instantiates a new MediumRuleActionDtoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediumRuleActionDtoAllOf(accessToken string, title string, content string) *MediumRuleActionDtoAllOf {
	this := MediumRuleActionDtoAllOf{}
	this.AccessToken = accessToken
	this.Title = title
	this.Content = content
	return &this
}

// NewMediumRuleActionDtoAllOfWithDefaults instantiates a new MediumRuleActionDtoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediumRuleActionDtoAllOfWithDefaults() *MediumRuleActionDtoAllOf {
	this := MediumRuleActionDtoAllOf{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *MediumRuleActionDtoAllOf) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *MediumRuleActionDtoAllOf) GetAccessTokenOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *MediumRuleActionDtoAllOf) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetTitle returns the Title field value
func (o *MediumRuleActionDtoAllOf) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *MediumRuleActionDtoAllOf) GetTitleOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *MediumRuleActionDtoAllOf) SetTitle(v string) {
	o.Title = v
}

// GetContent returns the Content field value
func (o *MediumRuleActionDtoAllOf) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *MediumRuleActionDtoAllOf) GetContentOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *MediumRuleActionDtoAllOf) SetContent(v string) {
	o.Content = v
}

// GetCanonicalUrl returns the CanonicalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediumRuleActionDtoAllOf) GetCanonicalUrl() string {
	if o == nil || isNil(o.CanonicalUrl.Get()) {
		var ret string
		return ret
	}
	return *o.CanonicalUrl.Get()
}

// GetCanonicalUrlOk returns a tuple with the CanonicalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediumRuleActionDtoAllOf) GetCanonicalUrlOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.CanonicalUrl.Get(), o.CanonicalUrl.IsSet()
}

// HasCanonicalUrl returns a boolean if a field has been set.
func (o *MediumRuleActionDtoAllOf) HasCanonicalUrl() bool {
	if o != nil && o.CanonicalUrl.IsSet() {
		return true
	}

	return false
}

// SetCanonicalUrl gets a reference to the given NullableString and assigns it to the CanonicalUrl field.
func (o *MediumRuleActionDtoAllOf) SetCanonicalUrl(v string) {
	o.CanonicalUrl.Set(&v)
}
// SetCanonicalUrlNil sets the value for CanonicalUrl to be an explicit nil
func (o *MediumRuleActionDtoAllOf) SetCanonicalUrlNil() {
	o.CanonicalUrl.Set(nil)
}

// UnsetCanonicalUrl ensures that no value is present for CanonicalUrl, not even an explicit nil
func (o *MediumRuleActionDtoAllOf) UnsetCanonicalUrl() {
	o.CanonicalUrl.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediumRuleActionDtoAllOf) GetTags() string {
	if o == nil || isNil(o.Tags.Get()) {
		var ret string
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediumRuleActionDtoAllOf) GetTagsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *MediumRuleActionDtoAllOf) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableString and assigns it to the Tags field.
func (o *MediumRuleActionDtoAllOf) SetTags(v string) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *MediumRuleActionDtoAllOf) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *MediumRuleActionDtoAllOf) UnsetTags() {
	o.Tags.Unset()
}

// GetPublicationId returns the PublicationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediumRuleActionDtoAllOf) GetPublicationId() string {
	if o == nil || isNil(o.PublicationId.Get()) {
		var ret string
		return ret
	}
	return *o.PublicationId.Get()
}

// GetPublicationIdOk returns a tuple with the PublicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediumRuleActionDtoAllOf) GetPublicationIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return o.PublicationId.Get(), o.PublicationId.IsSet()
}

// HasPublicationId returns a boolean if a field has been set.
func (o *MediumRuleActionDtoAllOf) HasPublicationId() bool {
	if o != nil && o.PublicationId.IsSet() {
		return true
	}

	return false
}

// SetPublicationId gets a reference to the given NullableString and assigns it to the PublicationId field.
func (o *MediumRuleActionDtoAllOf) SetPublicationId(v string) {
	o.PublicationId.Set(&v)
}
// SetPublicationIdNil sets the value for PublicationId to be an explicit nil
func (o *MediumRuleActionDtoAllOf) SetPublicationIdNil() {
	o.PublicationId.Set(nil)
}

// UnsetPublicationId ensures that no value is present for PublicationId, not even an explicit nil
func (o *MediumRuleActionDtoAllOf) UnsetPublicationId() {
	o.PublicationId.Unset()
}

// GetIsHtml returns the IsHtml field value if set, zero value otherwise.
func (o *MediumRuleActionDtoAllOf) GetIsHtml() bool {
	if o == nil || isNil(o.IsHtml) {
		var ret bool
		return ret
	}
	return *o.IsHtml
}

// GetIsHtmlOk returns a tuple with the IsHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediumRuleActionDtoAllOf) GetIsHtmlOk() (*bool, bool) {
	if o == nil || isNil(o.IsHtml) {
    return nil, false
	}
	return o.IsHtml, true
}

// HasIsHtml returns a boolean if a field has been set.
func (o *MediumRuleActionDtoAllOf) HasIsHtml() bool {
	if o != nil && !isNil(o.IsHtml) {
		return true
	}

	return false
}

// SetIsHtml gets a reference to the given bool and assigns it to the IsHtml field.
func (o *MediumRuleActionDtoAllOf) SetIsHtml(v bool) {
	o.IsHtml = &v
}

func (o MediumRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessToken"] = o.AccessToken
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if o.CanonicalUrl.IsSet() {
		toSerialize["canonicalUrl"] = o.CanonicalUrl.Get()
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if o.PublicationId.IsSet() {
		toSerialize["publicationId"] = o.PublicationId.Get()
	}
	if !isNil(o.IsHtml) {
		toSerialize["isHtml"] = o.IsHtml
	}
	return json.Marshal(toSerialize)
}

type NullableMediumRuleActionDtoAllOf struct {
	value *MediumRuleActionDtoAllOf
	isSet bool
}

func (v NullableMediumRuleActionDtoAllOf) Get() *MediumRuleActionDtoAllOf {
	return v.value
}

func (v *NullableMediumRuleActionDtoAllOf) Set(val *MediumRuleActionDtoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMediumRuleActionDtoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMediumRuleActionDtoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediumRuleActionDtoAllOf(val *MediumRuleActionDtoAllOf) *NullableMediumRuleActionDtoAllOf {
	return &NullableMediumRuleActionDtoAllOf{value: val, isSet: true}
}

func (v NullableMediumRuleActionDtoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediumRuleActionDtoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


