/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// RenameAssetFolderDto struct for RenameAssetFolderDto
type RenameAssetFolderDto struct {
	// The name of the folder.
	FolderName string `json:"folderName"`
}

// NewRenameAssetFolderDto instantiates a new RenameAssetFolderDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRenameAssetFolderDto(folderName string) *RenameAssetFolderDto {
	this := RenameAssetFolderDto{}
	this.FolderName = folderName
	return &this
}

// NewRenameAssetFolderDtoWithDefaults instantiates a new RenameAssetFolderDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRenameAssetFolderDtoWithDefaults() *RenameAssetFolderDto {
	this := RenameAssetFolderDto{}
	return &this
}

// GetFolderName returns the FolderName field value
func (o *RenameAssetFolderDto) GetFolderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FolderName
}

// GetFolderNameOk returns a tuple with the FolderName field value
// and a boolean to check if the value has been set.
func (o *RenameAssetFolderDto) GetFolderNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FolderName, true
}

// SetFolderName sets field value
func (o *RenameAssetFolderDto) SetFolderName(v string) {
	o.FolderName = v
}

func (o RenameAssetFolderDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["folderName"] = o.FolderName
	}
	return json.Marshal(toSerialize)
}

type NullableRenameAssetFolderDto struct {
	value *RenameAssetFolderDto
	isSet bool
}

func (v NullableRenameAssetFolderDto) Get() *RenameAssetFolderDto {
	return v.value
}

func (v *NullableRenameAssetFolderDto) Set(val *RenameAssetFolderDto) {
	v.value = val
	v.isSet = true
}

func (v NullableRenameAssetFolderDto) IsSet() bool {
	return v.isSet
}

func (v *NullableRenameAssetFolderDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRenameAssetFolderDto(val *RenameAssetFolderDto) *NullableRenameAssetFolderDto {
	return &NullableRenameAssetFolderDto{value: val, isSet: true}
}

func (v NullableRenameAssetFolderDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRenameAssetFolderDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


