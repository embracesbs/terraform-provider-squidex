/*
Squidex API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 7.0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package squidexclient

import (
	"encoding/json"
)

// JsonFieldPropertiesDto struct for JsonFieldPropertiesDto
type JsonFieldPropertiesDto struct {
	FieldPropertiesDto
}

// NewJsonFieldPropertiesDto instantiates a new JsonFieldPropertiesDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJsonFieldPropertiesDto(fieldType string) *JsonFieldPropertiesDto {
	this := JsonFieldPropertiesDto{}
	this.FieldType = fieldType
	return &this
}

// NewJsonFieldPropertiesDtoWithDefaults instantiates a new JsonFieldPropertiesDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJsonFieldPropertiesDtoWithDefaults() *JsonFieldPropertiesDto {
	this := JsonFieldPropertiesDto{}
	return &this
}

func (o JsonFieldPropertiesDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedFieldPropertiesDto, errFieldPropertiesDto := json.Marshal(o.FieldPropertiesDto)
	if errFieldPropertiesDto != nil {
		return []byte{}, errFieldPropertiesDto
	}
	errFieldPropertiesDto = json.Unmarshal([]byte(serializedFieldPropertiesDto), &toSerialize)
	if errFieldPropertiesDto != nil {
		return []byte{}, errFieldPropertiesDto
	}
	return json.Marshal(toSerialize)
}

type NullableJsonFieldPropertiesDto struct {
	value *JsonFieldPropertiesDto
	isSet bool
}

func (v NullableJsonFieldPropertiesDto) Get() *JsonFieldPropertiesDto {
	return v.value
}

func (v *NullableJsonFieldPropertiesDto) Set(val *JsonFieldPropertiesDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJsonFieldPropertiesDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJsonFieldPropertiesDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJsonFieldPropertiesDto(val *JsonFieldPropertiesDto) *NullableJsonFieldPropertiesDto {
	return &NullableJsonFieldPropertiesDto{value: val, isSet: true}
}

func (v NullableJsonFieldPropertiesDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJsonFieldPropertiesDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


