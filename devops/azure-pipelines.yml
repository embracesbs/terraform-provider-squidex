# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - refs/tags/v*
  - features/0.6.3

variables:
  - name: version
    value: 0.5.0
    # ${{ replace(variables['Build.SourceBranchName'],'v','') }}

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: Bash@3
    displayName: Build
    inputs:
      targetType: "inline"
      script: |
        echo $(version2)
        chmod +x ./devops/scripts/build_release.sh
        VERSION=$(Version) ./devops/scripts/build_release.sh

  - task: UniversalPackages@0
    condition: and(succeeded(), not(eq(variables['Build.Reason'], 'PullRequest')))
    displayName: Release
    inputs:
      command: "publish"
      publishDirectory: "$(System.DefaultWorkingDirectory)/artifacts"
      feedsToUsePublish: "internal"
      vstsFeedPublish: "7720f8d2-bf64-47d9-8b10-53f21220d54d/9ba7201b-e25d-4afc-b55b-6ad212a1516d"
      vstsFeedPackagePublish: "terraform-provider-squidex"
      
      versionOption: "custom"
      versionPublish: $(Version)
      packagePublishDescription: "Embrace's terraform-provider-squidex, https://github.com/embracesbs/terraform-provider-squidex"
